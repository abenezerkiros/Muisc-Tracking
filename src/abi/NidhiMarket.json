{
  "address": "0x8dCf52e97f0Cb64d88ceE6Cd8B35054BC8A77D9E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "profileContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payoutAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        }
      ],
      "name": "MarketItemCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MarketItemDelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MarketItemImported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakedAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "MarketItemSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStakedAmount",
          "type": "uint256"
        }
      ],
      "name": "PassiveIncomeRedeemed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GURU",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SGURU",
      "outputs": [
        {
          "internalType": "contract StakingToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minPrice_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "routerPath",
          "type": "address[]"
        }
      ],
      "name": "addPaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "buyerAddresses",
          "type": "address[]"
        }
      ],
      "name": "addToBuyerWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addTokenToCreatorCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "addWhitelistedNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "afterBurnToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "collectionSizesByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "created_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owned_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "delistMarketItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "itemIds",
          "type": "uint256[]"
        }
      ],
      "name": "fetchItems",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "itemId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "creatorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "creatorDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ownerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ownerDeeplink",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "sellerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sellerDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payoutPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "redeemableValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct NidhiMarket.MarketItemDetails[]",
          "name": "items",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lastItemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pageSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "ascending",
          "type": "bool"
        }
      ],
      "name": "fetchItemsByCreator",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "itemId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "creatorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "creatorDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ownerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ownerDeeplink",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "sellerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sellerDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payoutPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "redeemableValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct NidhiMarket.MarketItemDetails[]",
          "name": "items",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lastItemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pageSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "ascending",
          "type": "bool"
        }
      ],
      "name": "fetchItemsByOwner",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "itemId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "creatorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "creatorDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ownerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ownerDeeplink",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "sellerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sellerDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payoutPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "redeemableValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct NidhiMarket.MarketItemDetails[]",
          "name": "items",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lastItemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pageSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "ascending",
          "type": "bool"
        }
      ],
      "name": "fetchMarketItems",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "itemId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "creatorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "creatorDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ownerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ownerDeeplink",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "sellerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sellerDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payoutPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "redeemableValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct NidhiMarket.MarketItemDetails[]",
          "name": "items",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "getMarketItem",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "itemId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "creatorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "creatorDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ownerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "ownerDeeplink",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "listed",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "sellerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sellerDeeplink",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payoutPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "redeemableValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct NidhiMarket.MarketItemDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMarketItemId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPaymentTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getSwapRoute",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "importMarketItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "intrinsicValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "stakingPercentage",
          "type": "uint16"
        }
      ],
      "name": "listMarketItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minStakingPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profile",
      "outputs": [
        {
          "internalType": "contract NidhiProfile",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "purchaseMarketItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "redeemable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "removePaymentToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeTokenFromOwnerCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftContract",
          "type": "address"
        }
      ],
      "name": "removeWhitelistedNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "resetBuyerWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract IRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fee_",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeCollector_",
          "type": "address"
        }
      ],
      "name": "setFeeCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minPrice_",
          "type": "uint256"
        }
      ],
      "name": "setMinPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minStakingPercentage_",
          "type": "uint256"
        }
      ],
      "name": "setMinStakingPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract Staking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "totalValueByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redeemable_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2a8f572e38e387f114c17b747c12df8297187bc8faf238dc9f7d6ff672ebdec7",
  "receipt": {
    "to": null,
    "from": "0xb6643B2508F196b2fC97C826aD432575634facB4",
    "contractAddress": "0x8dCf52e97f0Cb64d88ceE6Cd8B35054BC8A77D9E",
    "transactionIndex": 5,
    "gasUsed": "5922515",
    "logsBloom": "0x
    "blockHash": "0x16a6e809572077316b31d6a84f7b29517116cfa284289f328aed1adb0deff208",
    "transactionHash": "0x2a8f572e38e387f114c17b747c12df8297187bc8faf238dc9f7d6ff672ebdec7",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 24099666,
        "transactionHash": "0x2a8f572e38e387f114c17b747c12df8297187bc8faf238dc9f7d6ff672ebdec7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b6643b2508f196b2fc97c826ad432575634facb4",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000002a14fdf2ae05680000000000000000000000000000000000000000000000004ad18cdb4027836f00000000000000000000000000000000000000000000050a661f1ed7aa2e4fda0000000000000000000000000000000000000000000000004aa777dd4d797e0700000000000000000000000000000000000000000000050a664933d59cdc5542",
        "logIndex": 35,
        "blockHash": "0x16a6e809572077316b31d6a84f7b29517116cfa284289f328aed1adb0deff208"
      }
    ],
    "blockNumber": 24099666,
    "cumulativeGasUsed": "6877447",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x28701a232B566729381C53E47a3f53b08F50eb4C",
    "0x7F244A5DA32D3C1727e604Cb16554bFae89579A8",
    "0xf7552ecff8f6D58d3762876d886A581c0f275968",
    "0xDA47f407ba7170D2a453851384222C6c1c07410B",
    "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
  ],
  "solcInputHash": "c4147c38b87fc156f38be2c3f31aef67",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"profileContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payoutAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"MarketItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MarketItemDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MarketItemImported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"MarketItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStakedAmount\",\"type\":\"uint256\"}],\"name\":\"PassiveIncomeRedeemed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GURU\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SGURU\",\"outputs\":[{\"internalType\":\"contract StakingToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minPrice_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"routerPath\",\"type\":\"address[]\"}],\"name\":\"addPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"buyerAddresses\",\"type\":\"address[]\"}],\"name\":\"addToBuyerWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addTokenToCreatorCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"addWhitelistedNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"afterBurnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"collectionSizesByOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"created_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owned_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"delistMarketItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"}],\"name\":\"fetchItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"creatorDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerDeeplink\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"sellerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sellerDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemableValue\",\"type\":\"uint256\"}],\"internalType\":\"struct NidhiMarket.MarketItemDetails[]\",\"name\":\"items\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastItemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ascending\",\"type\":\"bool\"}],\"name\":\"fetchItemsByCreator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"creatorDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerDeeplink\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"sellerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sellerDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemableValue\",\"type\":\"uint256\"}],\"internalType\":\"struct NidhiMarket.MarketItemDetails[]\",\"name\":\"items\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastItemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ascending\",\"type\":\"bool\"}],\"name\":\"fetchItemsByOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"creatorDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerDeeplink\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"sellerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sellerDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemableValue\",\"type\":\"uint256\"}],\"internalType\":\"struct NidhiMarket.MarketItemDetails[]\",\"name\":\"items\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lastItemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ascending\",\"type\":\"bool\"}],\"name\":\"fetchMarketItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"creatorDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerDeeplink\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"sellerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sellerDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemableValue\",\"type\":\"uint256\"}],\"internalType\":\"struct NidhiMarket.MarketItemDetails[]\",\"name\":\"items\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getMarketItem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"creatorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"creatorDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ownerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerDeeplink\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"sellerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sellerDeeplink\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemableValue\",\"type\":\"uint256\"}],\"internalType\":\"struct NidhiMarket.MarketItemDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMarketItemId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaymentTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getSwapRoute\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"importMarketItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"intrinsicValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"stakingPercentage\",\"type\":\"uint16\"}],\"name\":\"listMarketItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakingPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"profile\",\"outputs\":[{\"internalType\":\"contract NidhiProfile\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"purchaseMarketItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"redeemable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"removePaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"removeTokenFromOwnerCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"removeWhitelistedNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"resetBuyerWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee_\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeCollector_\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minPrice_\",\"type\":\"uint256\"}],\"name\":\"setMinPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minStakingPercentage_\",\"type\":\"uint256\"}],\"name\":\"setMinStakingPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract Staking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"totalValueByOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemable_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPaymentToken(address,uint256,address[])\":{\"details\":\"Adds a new token as payment option.\"},\"addToBuyerWhitelist(uint256,address[])\":{\"details\":\"Whitelists a list of buyer addresses for the provided item. This will only affect the initial sale.\"},\"addTokenToCreatorCollection(address,address,uint256)\":{\"details\":\"Adds the token to the creator's collection. This function can only be called from whitelisted NFT contracts.\"},\"afterBurnToken(address,address,uint256)\":{\"details\":\"Called by any Nidhi NFT after it was burned. This will initiate the transfer of all SGURU tokens held by this token and delete all index entries associated with this token. Since this function's visibility is external, it will verify that the token was in fact burned.\"},\"collectionSizesByOwner(address)\":{\"details\":\"Returns the collection sizes for the given address.\"},\"delistMarketItem(uint256)\":{\"details\":\"Delists an item from the marketplace. The item itself will be transferred back to the seller.\"},\"fetchItems(uint256[])\":{\"details\":\"Returns a list of items.\"},\"fetchItemsByCreator(address,uint256,uint256,bool)\":{\"details\":\"Returns a page of items by creator.\"},\"fetchItemsByOwner(address,uint256,uint256,bool)\":{\"details\":\"Returns a page of listed market items.\"},\"fetchMarketItems(uint256,uint256,bool)\":{\"details\":\"Returns a page of listed market items.\"},\"getMarketItem(uint256)\":{\"details\":\"Returns the market item for the provided id.\"},\"getMarketItemId(address,uint256)\":{\"details\":\"Returns the market item id for the provided NFT. If the token is not on the marketplace, this function will return 0.\"},\"getPaymentTokens()\":{\"details\":\"Returns all valid payment tokens.\"},\"getSwapRoute(address)\":{\"details\":\"Returns the swap route for the given token.\"},\"importMarketItem(address,uint256)\":{\"details\":\"Adds an arbitrary NFT to the user's collection.\"},\"intrinsicValue(uint256)\":{\"details\":\"Returns the intrinsic value of the given market item.\"},\"listMarketItem(address,uint256,address,uint256,uint16)\":{\"details\":\"Lists an item for sale on the marketplace. The item itself will be transferred to the marketplace.\"},\"purchaseMarketItem(uint256)\":{\"details\":\"Sells the market item. Funds will be transferred to the seller and the staking contract. The ownership of the item will be transferred to the buyer.\"},\"redeem(uint256,uint256)\":{\"details\":\"Transfers the redeemable value to the current owner.\"},\"redeemable(uint256)\":{\"details\":\"Returns the redeemable value of the given market item.\"},\"removePaymentToken(address)\":{\"details\":\"Removes a token from payment options.\"},\"removeTokenFromOwnerCollection(address,uint256)\":{\"details\":\"Removes the provided token from the owner's collection. This function can be called by the owner or the contract of the NFT that should be removed. The latter should only remove the token, if there was an external token ownership transfer.\"},\"resetBuyerWhitelist(uint256)\":{\"details\":\"Resets the whitelist for the provided item. This will allow anyone to purchase this item.\"},\"setFee(uint256)\":{\"details\":\"Sets the TX fee that is applied to each purchase.\"},\"setFeeCollector(address)\":{\"details\":\"Sets the address where TX fees are being sent to.\"},\"setMinPrice(address,uint256)\":{\"details\":\"Sets the minimum price for new market items. The minimum price must be greater than 0.\"},\"setMinStakingPercentage(uint256)\":{\"details\":\"Sets the minimum staking percentage for new market items. The minimum staking percentage must be greater than 0 and less then or equal to 100. The provided value is the actual percentage multiplied by 100.\"},\"totalValueByOwner(address)\":{\"details\":\"Returns the total value for all items of the given owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers the contract ownership.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NidhiMarket.sol\":\"NidhiMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x671741933530f343f023a40e58e61bc09d62494b96c6f3e39e647f315facd519\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\"},\"contracts/NidhiMarket.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\nimport \\\"./external/IRouter.sol\\\";\\nimport \\\"./external/Staking.sol\\\";\\nimport \\\"./external/StakingToken.sol\\\";\\nimport \\\"./interfaces/INidhiNFT.sol\\\";\\nimport \\\"./utils/NidhiCollection.sol\\\";\\nimport \\\"./utils/SafeNidhiCollection.sol\\\";\\nimport \\\"./NidhiProfile.sol\\\";\\n\\ncontract NidhiMarket is ReentrancyGuard {\\n\\n    using SafeERC20 for IERC20;\\n    using SafeNidhiCollection for NidhiCollection;\\n    using SafeNidhiCollection for mapping (address => NidhiCollection);\\n\\n    struct MarketItem {\\n        uint itemId;\\n        address nftContract;\\n        uint tokenId;\\n        address seller;\\n        address owner;\\n        address paymentToken;\\n        uint price;\\n        uint payoutAmount;\\n        uint stakedAmount;\\n        uint gons;\\n        bool listed;\\n    }\\n\\n    struct MarketItemDetails {\\n        uint itemId;\\n        address nftContract;\\n        uint tokenId;\\n        address creator;\\n        string creatorName;\\n        string creatorDeeplink;\\n        address owner;\\n        string ownerName;\\n        string ownerDeeplink;\\n        bool listed;\\n        address seller;\\n        string sellerName;\\n        string sellerDeeplink;\\n        address paymentToken;\\n        uint price;\\n        uint payoutPercentage;\\n        uint totalValue;\\n        uint redeemableValue;\\n    }\\n\\n    IERC20 public immutable GURU;\\n    StakingToken public immutable SGURU;\\n    Staking public immutable staking;\\n    NidhiProfile public immutable profile;\\n    IRouter public immutable router;\\n\\n    mapping (address => uint) public minPrice;\\n\\n    uint public minStakingPercentage = 1000; // 10%\\n    uint public fee; // 0%\\n\\n    address public feeCollector;\\n\\n    uint private _itemIds;\\n    address private _owner;\\n\\n    mapping (address => bool) _isWhitelistedNFT;\\n    mapping (address => bool) _isPaymentToken;\\n    mapping (address => NidhiCollection) private _listedItemsByCreator;\\n    mapping (address => NidhiCollection) private _itemsByCreator;\\n    mapping (address => NidhiCollection) private _itemsByOwner;\\n    mapping (address => mapping (uint => uint)) private _tokenIdToItemId;\\n    mapping (uint => MarketItem) private _idToMarketItem;\\n    mapping (address => address[]) private _routerPaths;\\n    mapping (uint => mapping (address => bool)) _buyerWhitelist;\\n\\n    address[] private _paymentTokens;\\n\\n    NidhiCollection private _listedItems;\\n\\n    event MarketItemCreated(\\n        uint indexed itemId,\\n        address indexed nftContract,\\n        uint indexed tokenId,\\n        address seller,\\n        address owner,\\n        address paymentToken,\\n        uint price,\\n        uint payoutAmount,\\n        uint stakedAmount\\n    );\\n\\n    event MarketItemSold(\\n        uint indexed itemId,\\n        address indexed nftContract,\\n        uint indexed tokenId,\\n        address buyer,\\n        address paymentToken,\\n        uint price,\\n        uint stakedAmount,\\n        uint feeAmount\\n    );\\n\\n    event MarketItemDelisted(\\n        uint indexed itemId,\\n        address indexed nftContract,\\n        uint indexed tokenId\\n    );\\n\\n    event MarketItemImported(\\n        uint indexed itemId,\\n        address indexed nftContract,\\n        uint indexed tokenId\\n    );\\n\\n    event PassiveIncomeRedeemed(\\n        uint indexed itemId,\\n        address indexed owner,\\n        uint value,\\n        uint newStakedAmount\\n    );\\n\\n    constructor(\\n        address tokenAddress,\\n        address stakingTokenAddress,\\n        address stakingContractAddress,\\n        address profileContractAddress,\\n        address routerAddress\\n    ) {\\n        _owner = msg.sender;\\n        _listedItems = new NidhiCollection();\\n        GURU = IERC20(tokenAddress);\\n        SGURU = StakingToken(stakingTokenAddress);\\n        staking = Staking(stakingContractAddress);\\n        profile = NidhiProfile(profileContractAddress);\\n        router = IRouter(routerAddress);\\n        _paymentTokens.push(tokenAddress);\\n        _isPaymentToken[tokenAddress] = true;\\n        minPrice[tokenAddress] = 1e9;\\n    }\\n\\n    function addWhitelistedNFT(address nftContract) external onlyOwner {\\n        _isWhitelistedNFT[nftContract] = true;\\n    }\\n\\n    function removeWhitelistedNFT(address nftContract) external onlyOwner {\\n        delete _isWhitelistedNFT[nftContract];\\n    }\\n\\n    /**\\n     * @dev Sets the minimum price for new market items.\\n     * The minimum price must be greater than 0.\\n     */\\n    function setMinPrice(address token, uint minPrice_) external onlyOwner {\\n        require(_isPaymentToken[token], \\\"invalid payment token\\\");\\n        require(minPrice_ > 0, \\\"minimum price too low\\\");\\n        minPrice[token] = minPrice_;\\n    }\\n\\n    /**\\n     * @dev Sets the minimum staking percentage for new market items.\\n     * The minimum staking percentage must be greater than 0 and less\\n     * then or equal to 100.\\n     * The provided value is the actual percentage multiplied by 100.\\n     */\\n    function setMinStakingPercentage(uint minStakingPercentage_) external onlyOwner {\\n        require(minStakingPercentage_ <= 10000, \\\"minimum percentage too high\\\");\\n        minStakingPercentage = minStakingPercentage_;\\n    }\\n\\n    /**\\n     * @dev Sets the TX fee that is applied to each purchase.\\n     */\\n    function setFee(uint fee_) external onlyOwner {\\n        require(feeCollector != address(0), \\\"fee collector not set\\\");\\n        require(fee_ <= 10000, \\\"invalid fee\\\");\\n        fee = fee_;\\n    }\\n\\n    /**\\n     * @dev Sets the address where TX fees are being sent to.\\n     */\\n    function setFeeCollector(address feeCollector_) external onlyOwner {\\n        require(feeCollector_ != address(0) || fee == 0, \\\"invalid fee collector\\\");\\n        feeCollector = feeCollector_;\\n    }\\n\\n    /**\\n     * @dev Transfers the contract ownership.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _owner = newOwner;\\n    }\\n\\n    /**\\n     * @dev Adds a new token as payment option.\\n     */\\n     function addPaymentToken(\\n        address tokenAddress,\\n        uint minPrice_,\\n        address[] memory routerPath\\n    ) external onlyOwner {\\n        require(minPrice_ > 0, \\\"minimum price too low\\\");\\n        require(\\n            (tokenAddress == address(GURU) && routerPath.length == 0) ||\\n            (tokenAddress != address(GURU) &&\\n             routerPath[0] == tokenAddress &&\\n             routerPath[routerPath.length - 1] == address(GURU)),\\n            \\\"invalid route\\\"\\n        );\\n        if (!_isPaymentToken[tokenAddress]) {\\n            _paymentTokens.push(tokenAddress);\\n            _isPaymentToken[tokenAddress] = true;\\n        }\\n        minPrice[tokenAddress] = minPrice_;\\n        _routerPaths[tokenAddress] = routerPath;\\n    }\\n\\n    /**\\n     * @dev Removes a token from payment options.\\n     */\\n    function removePaymentToken(address tokenAddress) external onlyOwner {\\n        require(tokenAddress != address(GURU));\\n        delete _isPaymentToken[tokenAddress];\\n        delete _routerPaths[tokenAddress];\\n        delete minPrice[tokenAddress];\\n        uint len = _paymentTokens.length;\\n        bool shift;\\n        for (uint i = 0; i < len; i++) {\\n            if (shift) {\\n                _paymentTokens[i - 1] = _paymentTokens[i];\\n            } else if (_paymentTokens[i] == tokenAddress) {\\n                shift = true;\\n            }\\n        }\\n        if (shift) _paymentTokens.pop();\\n    }\\n\\n    /**\\n     * @dev Returns all valid payment tokens.\\n     */\\n    function getPaymentTokens() external view returns (address[] memory) {\\n        return _paymentTokens;\\n    }\\n\\n    /**\\n     * @dev Returns the swap route for the given token.\\n     */\\n    function getSwapRoute(address tokenAddress) external view returns (address[] memory) {\\n        return _routerPaths[tokenAddress];\\n    }\\n\\n    /**\\n     * @dev Whitelists a list of buyer addresses for the provided item.\\n     * This will only affect the initial sale.\\n     */\\n    function addToBuyerWhitelist(\\n        uint itemId,\\n        address[] calldata buyerAddresses\\n    ) external {\\n        uint len = buyerAddresses.length;\\n        require(len > 0, \\\"empty buyer list\\\");\\n        MarketItem storage item = _idToMarketItem[itemId];\\n        address creator = INidhiNFT(item.nftContract).creatorOf(item.tokenId);\\n        require(creator == msg.sender, \\\"caller is not the creator\\\");\\n        address self = address(this);\\n        require(!_buyerWhitelist[itemId][self], \\\"not initial listing\\\");\\n        _buyerWhitelist[itemId][address(0)] = true;\\n        for (uint i = 0; i < len; i++) {\\n            address ba = buyerAddresses[i];\\n            _buyerWhitelist[itemId][buyerAddresses[i]] = ba != self;\\n        }\\n    }\\n\\n    /**\\n     * @dev Resets the whitelist for the provided item. This will allow anyone\\n     * to purchase this item.\\n     */\\n    function resetBuyerWhitelist(uint itemId) external {\\n        MarketItem storage item = _idToMarketItem[itemId];\\n        address creator = INidhiNFT(item.nftContract).creatorOf(item.tokenId);\\n        require(msg.sender == creator, \\\"caller is not the creator\\\");\\n        delete _buyerWhitelist[itemId][address(0)];\\n    }\\n\\n    /**\\n     * @dev Adds the token to the creator's collection.\\n     * This function can only be called from whitelisted NFT contracts.\\n     */\\n    function addTokenToCreatorCollection(\\n        address creator,\\n        address nftContract,\\n        uint tokenId\\n    ) external {\\n        require(_isWhitelistedNFT[msg.sender], \\\"caller is not whitelisted\\\");\\n        uint itemId = _tokenIdToItemId[nftContract][tokenId];\\n        if (itemId != 0) {\\n            if (address(_itemsByCreator[creator]) == address(0)) {\\n                _itemsByCreator[creator] = new NidhiCollection();\\n            }\\n            _itemsByCreator[creator].append(itemId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Lists an item for sale on the marketplace.\\n     * The item itself will be transferred to the marketplace.\\n     */\\n    function listMarketItem(\\n        address nftContract,\\n        uint tokenId,\\n        address paymentToken,\\n        uint price,\\n        uint16 stakingPercentage\\n    )\\n        external nonReentrant\\n    {\\n        address seller = msg.sender;\\n\\n        IERC721 erc721 = IERC721(nftContract);\\n\\n        require(_isPaymentToken[paymentToken], \\\"invalid payment token\\\");\\n        require(erc721.ownerOf(tokenId) == seller, \\\"caller is not the owner\\\");\\n        require(price >= minPrice[paymentToken], \\\"price too low\\\");\\n        require(stakingPercentage <= 10000, \\\"staking percentage too high\\\");\\n        require(stakingPercentage >= minStakingPercentage, \\\"staking percentage too low\\\");\\n\\n        uint staked = (price * stakingPercentage) / 10000;\\n        uint payout = price - staked;\\n        uint itemId = _tokenIdToItemId[nftContract][tokenId];\\n\\n        if (itemId == 0) {\\n            itemId = _tokenIdToItemId[nftContract][tokenId] = ++_itemIds;\\n            _idToMarketItem[itemId] = MarketItem(\\n                itemId,\\n                nftContract,\\n                tokenId,\\n                seller,\\n                address(this),\\n                paymentToken,\\n                price,\\n                payout,\\n                0,\\n                0,\\n                true\\n            );\\n        } else {\\n            MarketItem storage item = _idToMarketItem[itemId];\\n            item.seller = seller;\\n            item.owner = address(this);\\n            item.paymentToken = paymentToken;\\n            item.price = price;\\n            item.payoutAmount = payout;\\n            item.listed = true;\\n        }\\n\\n        INidhiNFT(nftContract).approvePublicTrading(tokenId, true);\\n\\n        erc721.transferFrom(seller, address(this), tokenId);\\n\\n        _itemsByOwner[seller].safeRemove(itemId);\\n        _listedItems.append(itemId);\\n\\n        address creator = INidhiNFT(nftContract).creatorOf(tokenId);\\n        _listedItemsByCreator.safeAdd(creator, itemId);\\n\\n        emit MarketItemCreated(\\n            itemId,\\n            nftContract,\\n            tokenId,\\n            seller,\\n            address(0),\\n            paymentToken,\\n            price,\\n            payout,\\n            staked\\n        );\\n    }\\n\\n    /**\\n     * @dev Delists an item from the marketplace.\\n     * The item itself will be transferred back to the seller.\\n     */\\n    function delistMarketItem(uint itemId) external nonReentrant {\\n\\n        MarketItem storage item = _idToMarketItem[itemId];\\n\\n        address seller = item.seller;\\n\\n        require(item.itemId == itemId, \\\"invalid item id\\\");\\n        require(seller == msg.sender, \\\"caller is not the seller\\\");\\n\\n        address nftContract = item.nftContract;\\n        uint tokenId = item.tokenId;\\n\\n        IERC721 nft = IERC721(nftContract);\\n\\n        nft.transferFrom(address(this), item.seller, tokenId);\\n\\n        item.seller = address(0);\\n        item.owner = address(seller);\\n        //item.price = 0;\\n        //item.payoutAmount = 0;\\n        item.listed = false;\\n\\n        _itemsByOwner.safeAdd(seller, itemId);\\n        _listedItems.remove(itemId);\\n\\n        address creator = INidhiNFT(nftContract).creatorOf(tokenId);\\n        _listedItemsByCreator[creator].safeRemove(itemId);\\n\\n        if (item.stakedAmount == 0) {\\n            INidhiNFT(nftContract).approvePublicTrading(tokenId, false);\\n        }\\n\\n        emit MarketItemDelisted(\\n            item.itemId,\\n            item.nftContract,\\n            item.tokenId\\n        );\\n    }\\n\\n    /**\\n     * @dev Adds an arbitrary NFT to the user's collection.\\n     */\\n    function importMarketItem(address nftContract, uint tokenId) external {\\n\\n        require(\\n            _isWhitelistedNFT[msg.sender],\\n            \\\"caller is not whitelisted\\\"\\n        );\\n\\n        address owner = IERC721(nftContract).ownerOf(tokenId);\\n        uint itemId = _tokenIdToItemId[nftContract][tokenId];\\n\\n        if (itemId == 0) {\\n            itemId = _tokenIdToItemId[nftContract][tokenId] = ++_itemIds;\\n            _idToMarketItem[itemId] = MarketItem(\\n                itemId,\\n                nftContract,\\n                tokenId,\\n                address(0),\\n                owner,\\n                address(0),\\n                0,\\n                0,\\n                0,\\n                0,\\n                false\\n            );\\n        } else {\\n            MarketItem storage item = _idToMarketItem[itemId];\\n            item.seller = address(0);\\n            item.owner = owner;\\n            //item.price = 0;\\n            //item.payoutAmount = 0;\\n            item.listed = false;\\n        }\\n\\n        _itemsByOwner.safeAdd(owner, itemId);\\n\\n        emit MarketItemImported(\\n            itemId,\\n            nftContract,\\n            tokenId\\n        );\\n    }\\n\\n    /**\\n     * @dev Sells the market item.\\n     * Funds will be transferred to the seller and the staking contract.\\n     * The ownership of the item will be transferred to the buyer.\\n     */\\n    function purchaseMarketItem(\\n        uint itemId\\n    ) external nonReentrant {\\n\\n        MarketItem storage item = _idToMarketItem[itemId];\\n\\n        require(\\n            item.itemId == itemId && item.listed,\\n            \\\"invalid item\\\"\\n        );\\n\\n        address buyer = msg.sender;\\n        uint feeAmount;\\n\\n        require(\\n            !_buyerWhitelist[itemId][address(0)]\\n            || _buyerWhitelist[itemId][buyer],\\n            \\\"not whitelisted\\\"\\n        );\\n\\n        uint price = item.price;\\n        uint staked = price - item.payoutAmount;\\n\\n        if (price > 0) {\\n            IERC20 paymentToken = IERC20(item.paymentToken);\\n            address[] storage path = _routerPaths[item.paymentToken];\\n            if (path.length == 0) {\\n                paymentToken.safeTransferFrom(buyer, address(this), price);\\n            } else {\\n                paymentToken.safeTransferFrom(\\n                    buyer,\\n                    address(this),\\n                    price);\\n                paymentToken.approve(address(router), staked);\\n                uint[] memory amounts = router.swapExactTokensForTokens(\\n                    staked,\\n                    0,\\n                    path,\\n                    address(this),\\n                    block.timestamp);\\n                staked = amounts[amounts.length - 1];\\n            }\\n\\n            // pay seller\\n            if (item.payoutAmount > 0) {\\n                if (fee > 0) {\\n                    feeAmount = (item.payoutAmount * fee) / 10000;\\n                    uint payout = item.payoutAmount - feeAmount;\\n                    paymentToken.transfer(item.seller, payout);\\n                    paymentToken.transfer(feeCollector, feeAmount);\\n                } else {\\n                    paymentToken.transfer(item.seller, item.payoutAmount);\\n                }\\n            }\\n\\n            // stake\\n            if (staked > 0) {\\n                GURU.approve(address(staking), staked);\\n                staking.stake(staked, address(this));\\n                staking.claim(address(this));\\n                item.stakedAmount = (item.gons > 0 ? SGURU.balanceForGons(item.gons) : 0) + staked;\\n                item.gons = SGURU.gonsForBalance(item.stakedAmount);\\n            }\\n        }\\n\\n        // transfer NFT to new owner\\n        IERC721(item.nftContract).safeTransferFrom(address(this), buyer, item.tokenId);\\n\\n        item.owner = buyer;\\n        item.listed = false;\\n\\n        _listedItems.remove(itemId);\\n        _itemsByOwner.safeAdd(buyer, itemId);\\n\\n        address creator = INidhiNFT(item.nftContract).creatorOf(item.tokenId);\\n        _listedItemsByCreator[creator].safeRemove(itemId);\\n\\n        delete _buyerWhitelist[itemId][address(0)];\\n        _buyerWhitelist[itemId][address(this)] = true;\\n\\n        emit MarketItemSold(\\n            itemId,\\n            item.nftContract,\\n            item.tokenId,\\n            buyer,\\n            item.paymentToken,\\n            item.price,\\n            item.stakedAmount,\\n            feeAmount\\n        );\\n    }\\n\\n    /**\\n     * @dev Transfers the redeemable value to the current owner.\\n     */\\n    function redeem(uint itemId, uint amount) external {\\n        MarketItem storage item = _idToMarketItem[itemId];\\n        address owner = IERC721(item.nftContract).ownerOf(item.tokenId);\\n        require(msg.sender == owner, \\\"caller is not the owner\\\");\\n        (uint iv, uint rv) = _itemCoreValues(itemId);\\n        require(amount <= rv, \\\"amount exceeds balance\\\");\\n        SafeERC20.safeTransfer(SGURU, owner, amount);\\n        uint remaining = rv - amount;\\n        item.gons = SGURU.gonsForBalance(iv + remaining);\\n        item.stakedAmount = iv - remaining;\\n        emit PassiveIncomeRedeemed(\\n            itemId,\\n            owner,\\n            rv,\\n            iv\\n        );\\n    }\\n\\n    /**\\n     * @dev Called by any Nidhi NFT after it was burned.\\n     * This will initiate the transfer of all SGURU tokens held by this\\n     * token and delete all index entries associated with this token.\\n     * Since this function's visibility is external, it will verify that\\n     * the token was in fact burned.\\n     */\\n    function afterBurnToken(\\n        address creator,\\n        address nftContract,\\n        uint tokenId\\n    ) external {\\n        uint itemId = _tokenIdToItemId[nftContract][tokenId];\\n        if (itemId != 0) {\\n            require(_isBurned(nftContract, tokenId), \\\"token is not burned\\\");\\n            _itemsByCreator[creator].safeRemove(itemId);\\n            MarketItem storage item = _idToMarketItem[itemId];\\n            uint balance = SGURU.balanceForGons(item.gons);\\n            if (balance > 0) {\\n                SafeERC20.safeTransfer(SGURU, item.owner, balance);\\n            }\\n            if (address(_itemsByOwner[item.owner]) != address(0)) {\\n                _itemsByOwner[item.owner].remove(itemId);\\n            }\\n            delete _idToMarketItem[itemId];\\n            delete _tokenIdToItemId[nftContract][tokenId];\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes the provided token from the owner's collection.\\n     * This function can be called by the owner or the contract of\\n     * the NFT that should be removed. The latter should only remove\\n     * the token, if there was an external token ownership transfer.\\n     */\\n    function removeTokenFromOwnerCollection(\\n        address nftAddress,\\n        uint tokenId\\n    ) external {\\n        uint itemId = _tokenIdToItemId[nftAddress][tokenId];\\n        if (itemId != 0) {\\n            address owner = _idToMarketItem[itemId].owner;\\n            require(\\n                msg.sender == owner || msg.sender == nftAddress,\\n                \\\"owner has not changed\\\"\\n            );\\n            _itemsByOwner[owner].safeRemove(itemId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the market item id for the provided NFT.\\n     * If the token is not on the marketplace, this function will return 0.\\n     */\\n    function getMarketItemId(address nftAddress, uint tokenId)\\n        external view returns (uint)\\n    {\\n        return _tokenIdToItemId[nftAddress][tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the market item for the provided id.\\n     */\\n    function getMarketItem(uint itemId)\\n        external view returns (MarketItemDetails memory)\\n    {\\n        return _getMarketItemDetails(_idToMarketItem[itemId]);\\n    }\\n\\n    /**\\n     * @dev Returns a page of listed market items.\\n     */\\n    function fetchMarketItems(uint lastItemId, uint pageSize, bool ascending)\\n        external view returns (MarketItemDetails[] memory items)\\n    {\\n        (\\n            NidhiCollection.Item memory first,\\n            uint numItems\\n        ) = _countRemainingItems(_listedItems, lastItemId, ascending, pageSize);\\n        items = new MarketItemDetails[](numItems);\\n        NidhiCollection.Item memory current = first;\\n        for (uint i = 0; i < numItems; i++) {\\n            items[i] = _getMarketItemDetails(_idToMarketItem[current.itemId]);\\n            current = _listedItems.getNext(current, ascending);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a page of items by creator.\\n     */\\n    function fetchItemsByCreator(\\n        address creator,\\n        uint lastItemId,\\n        uint pageSize,\\n        bool ascending\\n    )\\n        external view returns (MarketItemDetails[] memory items)\\n    {\\n        NidhiCollection createdItems = _itemsByCreator[creator];\\n        if (address(createdItems) != address(0)) {\\n            (\\n                NidhiCollection.Item memory first,\\n                uint numItems\\n            ) = _countRemainingItems(createdItems, lastItemId, ascending, pageSize);\\n            items = new MarketItemDetails[](numItems);\\n            NidhiCollection.Item memory current = first;\\n            for (uint i = 0; i < numItems; i++) {\\n                items[i] = _getMarketItemDetails(_idToMarketItem[current.itemId]);\\n                current = createdItems.getNext(current, ascending);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a page of listed market items.\\n     */\\n    function fetchItemsByOwner(\\n        address owner,\\n        uint lastItemId,\\n        uint pageSize,\\n        bool ascending\\n    )\\n        public view returns (MarketItemDetails[] memory items)\\n    {\\n        NidhiCollection collection = _itemsByOwner[owner];\\n        if (address(collection) != address(0)) {\\n            (\\n                NidhiCollection.Item memory first,\\n                uint numItems\\n            ) = _countRemainingItems(collection, lastItemId, ascending, pageSize);\\n            items = new MarketItemDetails[](numItems);\\n            NidhiCollection.Item memory current = first;\\n            for (uint i = 0; i < numItems; i++) {\\n                items[i] = _getMarketItemDetails(_idToMarketItem[current.itemId]);\\n                current = collection.getNext(current, ascending);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns a list of items.\\n     */\\n    function fetchItems(uint[] calldata itemIds)\\n        public view returns (MarketItemDetails[] memory items)\\n    {\\n        uint len = itemIds.length;\\n        if (len > 0) {\\n            items = new MarketItemDetails[](len);\\n            for (uint i = 0; i < len; i++) {\\n                items[i] = _getMarketItemDetails(_idToMarketItem[itemIds[i]]);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the intrinsic value of the given market item.\\n     */\\n    function intrinsicValue(uint itemId) external view returns (uint) {\\n        (uint iv, ) = _itemCoreValues(itemId);\\n        return iv;\\n    }\\n\\n    /**\\n     * @dev Returns the redeemable value of the given market item.\\n     */\\n    function redeemable(uint itemId) external view returns (uint) {\\n        (, uint rv) = _itemCoreValues(itemId);\\n        return rv;\\n    }\\n\\n    /**\\n     * @dev Returns the collection sizes for the given address.\\n     */\\n    function collectionSizesByOwner(\\n        address who\\n    )\\n        external view returns (uint created_, uint owned_)\\n    {\\n        NidhiCollection created = _itemsByCreator[who];\\n        if (address(created) != address(0)) {\\n            created_ = created.size();\\n        }\\n        NidhiCollection owned = _itemsByOwner[who];\\n        if (address(owned) != address(0)) {\\n            owned_ = owned.size();\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the total value for all items of the given owner.\\n     */\\n    function totalValueByOwner(\\n        address owner\\n    )\\n        external view returns (uint total, uint redeemable_)\\n    {\\n        NidhiCollection collection = _itemsByOwner[owner];\\n        if (address(collection) != address(0)) {\\n            NidhiCollection.Item memory item = collection.head();\\n            while (item.itemId != 0) {\\n                (uint iv, uint rv) = _itemCoreValues(item.itemId);\\n                total += iv + rv;\\n                redeemable_ += rv;\\n                item = collection.get(item.next);\\n            }\\n        }\\n    }\\n\\n    function _countRemainingItems(\\n        NidhiCollection collection,\\n        uint lastItemId,\\n        bool ascending,\\n        uint limit\\n    )\\n        private\\n        view\\n        returns (NidhiCollection.Item memory firstItem, uint numItems)\\n    {\\n        firstItem = lastItemId == 0\\n        ? collection.first(ascending)\\n        : collection.getNext(collection.get(lastItemId), ascending);\\n        NidhiCollection.Item memory current = firstItem;\\n        for (uint i = limit; i > 0 && current.itemId != 0; i--) {\\n            numItems++;\\n            current = collection.getNext(current, ascending);\\n        }\\n    }\\n\\n    function _getMarketItemDetails(\\n        MarketItem storage item\\n    ) private view returns (MarketItemDetails memory details) {\\n        details.itemId = item.itemId;\\n        details.nftContract = item.nftContract;\\n        details.tokenId = item.tokenId;\\n        details.paymentToken = item.paymentToken;\\n        details.price = item.price;\\n        if (details.listed = item.listed) {\\n            details.seller = item.seller;\\n            details.sellerName = profile.nameOf(details.seller);\\n            details.sellerDeeplink = profile.deeplinkOf(details.seller);\\n            details.payoutPercentage = (item.payoutAmount * 10000) / details.price;\\n            (details.totalValue, ) = _itemCoreValues(details.itemId);\\n        } else {\\n            details.owner = IERC721(details.nftContract).ownerOf(details.tokenId);\\n            details.ownerName = profile.nameOf(details.owner);\\n            details.ownerDeeplink = profile.deeplinkOf(details.owner);\\n            (uint iv, uint rv) = _itemCoreValues(details.itemId);\\n            details.totalValue = iv + rv;\\n            details.redeemableValue = rv;\\n        }\\n        details.creator = INidhiNFT(details.nftContract).creatorOf(details.tokenId);\\n        details.creatorName = profile.nameOf(details.creator);\\n        details.creatorDeeplink = profile.deeplinkOf(details.creator);\\n    }\\n\\n    function _isBurned(\\n        address nftContract,\\n        uint tokenId\\n    ) private view returns (bool) {\\n        try IERC721(nftContract).ownerOf(tokenId) returns (address owner) {\\n            return owner == address(0);\\n        } catch {\\n            return true;\\n        }\\n    }\\n\\n    function _itemValue(\\n        MarketItem storage item\\n    ) private view returns (uint, uint) {\\n        uint total = SGURU.balanceForGons(item.gons);\\n        return (total, item.stakedAmount);\\n    }\\n\\n    function _itemCoreValues(uint itemId) private view returns (uint, uint) {\\n        MarketItem storage item = _idToMarketItem[itemId];\\n        (uint total, uint staked) = _itemValue(item);\\n        uint rv = (total - staked) / 2;\\n        uint iv = total - rv;\\n        return (iv, rv);\\n    }\\n\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"caller is not the owner\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0xe696523afcf1fbc4b0d4032e5d29bc7ff0ce5b38a9f9955e2ced75746e02e79d\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/NidhiProfile.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\ncontract NidhiProfile {\\n\\n    struct Profile {\\n        string name;\\n        string imageURL;\\n        string deeplink;\\n        string description;\\n        string url;\\n        string twitter;\\n        string instagram;\\n        string medium;\\n    }\\n\\n    mapping (address => Profile) public userProfiles;\\n    mapping (string => address) public deeplinkToAddress;\\n\\n    function update(Profile memory profile)\\n        external validDeeplink(profile.deeplink)\\n    {\\n        address owner = msg.sender;\\n        string storage currentDeeplink = userProfiles[owner].deeplink;\\n        if (bytes(currentDeeplink).length != 0) {\\n            delete deeplinkToAddress[currentDeeplink];\\n            deeplinkToAddress[profile.deeplink] = owner;\\n        } else if (bytes(profile.deeplink).length != 0) {\\n            deeplinkToAddress[profile.deeplink] = owner;\\n        }\\n        userProfiles[owner] = profile;\\n    }\\n\\n    function remove() external {\\n        delete deeplinkToAddress[userProfiles[msg.sender].deeplink];\\n        delete userProfiles[msg.sender];\\n    }\\n\\n    function nameOf(address owner) external view returns (string memory) {\\n        return userProfiles[owner].name;\\n    }\\n\\n    function deeplinkOf(address owner) external view returns (string memory) {\\n        return userProfiles[owner].deeplink;\\n    }\\n\\n    modifier validDeeplink(string memory deeplink) {\\n        if (bytes(deeplink).length != 0) {\\n            address currentAddress = deeplinkToAddress[deeplink];\\n            require(\\n                currentAddress == address(0) || currentAddress == msg.sender,\\n                \\\"deeplink already in use\\\"\\n            );\\n        }\\n        _;\\n    }\\n}\",\"keccak256\":\"0x553c337bc1aad6b4dd125b4fae826c9558a2cf6377563f1f5b899c59cae09ba2\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/external/IRouter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\ninterface IRouter {\\n\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function getAmountsIn(\\n        uint amountOut,\\n        address[] calldata path\\n    ) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x1441ca363d7eab6fd97d061309e240a8a941902adc651f0fe6d558dde79dfc3d\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/external/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nabstract contract Staking {\\n    function stake(uint amount, address recipient) external virtual returns (bool);\\n    function claim(address recipient) public virtual;\\n    function rebase() public virtual;\\n}\\n\",\"keccak256\":\"0xe23220d91c1a98c856f8cbc807894a73a10e531e26944a710220ba36f6c55863\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/external/StakingToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nabstract contract StakingToken is IERC20 {\\n    function balanceForGons(uint gons) public virtual view returns (uint);\\n    function gonsForBalance(uint amount) public virtual view returns (uint);\\n}\",\"keccak256\":\"0x8579993dce993ea0a17cf5dacbf0736406eaad56c47181ea1c498b13c833ea2e\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interfaces/INidhiNFT.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\ninterface INidhiNFT {\\n    function creatorOf(uint tokenId) external view returns (address);\\n    function approvePublicTrading(uint tokenId, bool approve) external;\\n}\\n\",\"keccak256\":\"0xf5ba91ff690512c0de1d9b8baf0303887c7fd6e13259c4fd4a7e27f92b88fb3c\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/utils/NidhiCollection.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\ncontract NidhiCollection {\\n\\n    struct Item {\\n        uint prev;\\n        uint next;\\n        uint itemId;\\n    }\\n\\n    uint public size;\\n    uint private _head;\\n    uint private _tail;\\n\\n    address private immutable _owner;\\n\\n    mapping (uint => Item) private _items;\\n\\n    constructor() {\\n        _owner = msg.sender;\\n    }\\n\\n    function append(uint itemId) public onlyOwner {\\n        Item memory item;\\n        item.itemId = itemId;\\n        if (size++ == 0) {\\n            _head = _tail = itemId;\\n        } else {\\n            item.prev = _tail;\\n            _items[_tail].next = itemId;\\n            _tail = itemId;\\n        }\\n        _items[itemId] = item;\\n    }\\n\\n    function remove(uint itemId) public onlyOwner {\\n        uint prev = _items[itemId].prev;\\n        uint next = _items[itemId].next;\\n        if (--size == 0) {\\n            _head = _tail = 0;\\n        } else {\\n            if (_head == itemId) {\\n                _head = _items[itemId].next;\\n            }\\n            if (_tail == itemId) {\\n                _tail = _items[itemId].prev;\\n            }\\n            _items[prev].next = next;\\n            _items[next].prev = prev;\\n        }\\n        delete _items[itemId];\\n    }\\n\\n    function get(uint id) public view returns (Item memory) {\\n        return _items[id];\\n    }\\n\\n    function getNext(Item memory current, bool ascending)\\n        public\\n        view\\n        returns (Item memory)\\n    {\\n        return get(ascending ? current.next : current.prev);\\n    }\\n\\n    function head() public view returns (Item memory) {\\n        return _items[_head];\\n    }\\n\\n    function tail() public view returns (Item memory) {\\n        return _items[_tail];\\n    }\\n\\n    function first(bool ascending) public view returns (Item memory) {\\n        return ascending ? head() : tail();\\n    }\\n\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"caller is not the owner\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xe51ddb4ef5754774a2b16e67dee9557f44eb913421049560a905d46c869144ee\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/utils/SafeNidhiCollection.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.4;\\n\\nimport \\\"./NidhiCollection.sol\\\";\\n\\nlibrary SafeNidhiCollection {\\n\\n    function safeAdd(\\n        mapping (address => NidhiCollection) storage collections,\\n        address who,\\n        uint itemId\\n    ) public {\\n        NidhiCollection collection = collections[who];\\n        if (address(collection) == address(0)) {\\n            collections[who] = collection = new NidhiCollection();\\n        }\\n        collection.append(itemId);\\n    }\\n\\n    function safeRemove(NidhiCollection collection, uint itemId) public {\\n        if (address(collection) != address(0)) {\\n            collection.remove(itemId);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf57b5952edbbbcdf8437bae488428a5611635d1d9196812461d80c218a86d99b\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x6101206040526103e86002553480156200001857600080fd5b5060405162006968380380620069688339810160408190526200003b9162000165565b6001600055600680546001600160a01b0319163317905560405162000060906200013a565b604051809103906000f0801580156200007d573d6000803e3d6000fd5b50601180546001600160a01b039283166001600160a01b0319918216179091556001600160601b0319606088811b821660805296871b811660a05294861b851660c05292851b841660e052931b909116610100526010805460018181019092557f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720180549092169390921692831790556000918252600860209081526040808420805460ff1916841790559190529020633b9aca009055620001d4565b6106c080620062a883390190565b80516001600160a01b03811681146200016057600080fd5b919050565b600080600080600060a086880312156200017d578081fd5b620001888662000148565b9450620001986020870162000148565b9350620001a86040870162000148565b9250620001b86060870162000148565b9150620001c86080870162000148565b90509295509295909350565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c615fdf620002c9600039600081816105a501528181611acf0152611b7501526000818161047e015281816143f9015281816144a401528181614617015281816146c00152818161482201526148cb01526000818161034801528181611e4f01528181611f170152611fb10152600081816104b801528181610f790152818161100e0152818161173b0152818161177901528181612045015281816120ef0152614bc2015260008181610605015281816109ff01528181610a4501528181610ac701528181611e7e01526125c90152615fdf6000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c8063a51254211161013b578063ca5e553e116100b8578063f887ea401161007c578063f887ea40146105a0578063fa00d03d146105c7578063fa485b68146105da578063fdd1646d146105ed578063ff402d231461060057600080fd5b8063ca5e553e14610533578063d1eaa0641461053b578063ddca3f4314610571578063eb556b501461057a578063f2fde38b1461058d57600080fd5b8063b833d7c8116100ff578063b833d7c8146104b3578063bd9a549f146104da578063c415b95c146104ed578063c68a0e1614610500578063c7be7a491461051357600080fd5b8063a512542114610440578063a82f15c214610453578063ab1a536914610466578063ab60636c14610479578063b4d918e5146104a057600080fd5b80634e7f1e20116101c95780637cbc23731161018d5780637cbc2373146103e1578063825a926f146103f45780638465093e146104075780638c77b5b71461041a578063a42dce801461042d57600080fd5b80634e7f1e201461038257806369fe0e2d146103955780636c0e3b09146103a85780637042bdb9146103bb5780637488cc8f146103ce57600080fd5b80632b47a569116102105780632b47a569146102e65780633e7d7feb146102fd578063455bf0b61461031057806347d5d502146103305780634cf088d91461034357600080fd5b806314d500351461024d578063210009cf1461027657806327df59ba1461028b578063285c4880146102b3578063295f36de146102c6575b600080fd5b61026061025b36600461515c565b610627565b60405161026d919061565f565b60405180910390f35b610289610284366004614f96565b6107ca565b005b61029e610299366004614f96565b610838565b6040805192835260208301919091520161026d565b6102896102c136600461509d565b61096d565b6102d96102d4366004614f96565b610c28565b60405161026d9190615612565b6102ef60025481565b60405190815260200161026d565b61028961030b366004615376565b610c9e565b6102ef61031e366004614f96565b60016020526000908152604090205481565b61028961033e36600461500e565b610d3d565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161026d565b610289610390366004614fce565b610e49565b6102896103a3366004615376565b61116e565b6102896103b636600461500e565b611253565b61029e6103c9366004614f96565b611386565b6102606103dc3660046151a5565b6114f5565b6102896103ef3660046153f0565b6115f4565b6102ef610402366004615376565b611879565b610289610415366004614f96565b61188d565b610289610428366004615376565b6118f9565b61028961043b366004614f96565b6124b2565b61028961044e366004614f96565b61257f565b610289610461366004614fce565b6127a6565b610260610474366004615411565b612910565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6102606104ae36600461515c565b612a9f565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6102ef6104e8366004615376565b612c34565b60045461036a906001600160a01b031681565b61028961050e366004615376565b612c48565b610526610521366004615376565b6130ac565b60405161026d91906156d3565b6102d96130d1565b6102ef61054936600461500e565b6001600160a01b03919091166000908152600c60209081526040808320938352929052205490565b6102ef60035481565b610289610588366004615376565b613133565b61028961059b366004614f96565b61324c565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6102896105d53660046153a6565b6132b6565b6102896105e836600461500e565b61355a565b6102896105fb366004615039565b613891565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038085166000908152600b60205260409020546060911680156107c15760008061065a838887896140e2565b915091508067ffffffffffffffff81111561068557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106be57816020015b6106ab614dea565b8152602001906001900390816106a35790505b5093508160005b828110156107bc576040808301516000908152600d602052206106e790614373565b86828151811061070757634e487b7160e01b600052603260045260246000fd5b60209081029190910181019190915260408051630e891c2760e01b815284516004820152918401516024830152830151604482015287151560648201526001600160a01b03861690630e891c279060840160606040518083038186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a8919061531b565b9150806107b48161585f565b9150506106c5565b505050505b50949350505050565b6006546001600160a01b031633146108175760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a83398151915260448201526064015b60405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038082166000908152600a6020526040812054909182911680156108d157806001600160a01b031663949d225d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561089657600080fd5b505afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce919061538e565b92505b6001600160a01b038085166000908152600b602052604090205416801561096657806001600160a01b031663949d225d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610963919061538e565b92505b5050915091565b6006546001600160a01b031633146109b55760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b600082116109fd5760405162461bcd60e51b81526020600482015260156024820152746d696e696d756d20707269636520746f6f206c6f7760581b604482015260640161080e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316148015610a3d57508051155b80610b2f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614158015610abe5750826001600160a01b031681600081518110610aab57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316145b8015610b2f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168160018351610afe9190615805565b81518110610b1c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316145b610b6b5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420726f75746560981b604482015260640161080e565b6001600160a01b03831660009081526008602052604090205460ff16610bef576010805460018082019092557f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720180546001600160a01b0319166001600160a01b0386169081179091556000908152600860205260409020805460ff191690911790555b6001600160a01b0383166000908152600160209081526040808320859055600e82529091208251610c2292840190614ea4565b50505050565b6001600160a01b0381166000908152600e6020908152604091829020805483518184028101840190945280845260609392830182828015610c9257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c74575b50505050509050919050565b6006546001600160a01b03163314610ce65760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b612710811115610d385760405162461bcd60e51b815260206004820152601b60248201527f6d696e696d756d2070657263656e7461676520746f6f20686967680000000000604482015260640161080e565b600255565b6006546001600160a01b03163314610d855760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b03821660009081526008602052604090205460ff16610de55760405162461bcd60e51b815260206004820152601560248201527434b73b30b634b2103830bcb6b2b73a103a37b5b2b760591b604482015260640161080e565b60008111610e2d5760405162461bcd60e51b81526020600482015260156024820152746d696e696d756d20707269636520746f6f206c6f7760581b604482015260640161080e565b6001600160a01b03909116600090815260016020526040902055565b6001600160a01b0382166000908152600c602090815260408083208484529091529020548015610c2257610e7d8383614955565b610ec95760405162461bcd60e51b815260206004820152601360248201527f746f6b656e206973206e6f74206275726e656400000000000000000000000000604482015260640161080e565b6001600160a01b038481166000908152600a6020526040908190205490516338b4afd960e01b8152911660048201526024810182905273DecC66Ac03a22166917F301Bb2EF21FA3F3c2832906338b4afd99060440160006040518083038186803b158015610f3657600080fd5b505af4158015610f4a573d6000803e3d6000fd5b5050506000828152600d602052604080822060098101549151637965d56d60e01b8152600481019290925292507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637965d56d9060240160206040518083038186803b158015610fc357600080fd5b505afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb919061538e565b9050801561103d57600482015461103d907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0316836149e5565b60048201546001600160a01b039081166000908152600b602052604090205416156110d4576004828101546001600160a01b039081166000908152600b602052604090819020549051634cc8221560e01b81529283018690521690634cc8221590602401600060405180830381600087803b1580156110bb57600080fd5b505af11580156110cf573d6000803e3d6000fd5b505050505b50506000818152600d602090815260408083208381556001810180546001600160a01b0319908116909155600282018590556003820180548216905560048201805482169055600582018054909116905560068101849055600781018490556008810184905560098101849055600a01805460ff191690556001600160a01b0386168352600c825280832085845290915281205550505050565b6006546001600160a01b031633146111b65760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6004546001600160a01b031661120e5760405162461bcd60e51b815260206004820152601560248201527f66656520636f6c6c6563746f72206e6f74207365740000000000000000000000604482015260640161080e565b61271081111561124e5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b604482015260640161080e565b600355565b6001600160a01b0382166000908152600c602090815260408083208484529091529020548015611381576000818152600d60205260409020600401546001600160a01b0316338114806112ae5750336001600160a01b038516145b6112fa5760405162461bcd60e51b815260206004820152601560248201527f6f776e657220686173206e6f74206368616e6765640000000000000000000000604482015260640161080e565b6001600160a01b038181166000908152600b6020526040908190205490516338b4afd960e01b8152911660048201526024810183905273DecC66Ac03a22166917F301Bb2EF21FA3F3c2832906338b4afd99060440160006040518083038186803b15801561136757600080fd5b505af415801561137b573d6000803e3d6000fd5b50505050505b505050565b6001600160a01b038082166000908152600b6020526040812054909182911680156114ef576000816001600160a01b0316638f7dcfa36040518163ffffffff1660e01b815260040160606040518083038186803b1580156113e657600080fd5b505afa1580156113fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141e919061531b565b90505b6040810151156109665760008061143b8360400151614a5d565b909250905061144a81836157ae565b61145490876157ae565b955061146081866157ae565b6020840151604051634a83e9cd60e11b81529196506001600160a01b03861691639507d39a916114969160040190815260200190565b60606040518083038186803b1580156114ae57600080fd5b505afa1580156114c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e6919061531b565b92505050611421565b50915091565b60608180156115ed578067ffffffffffffffff81111561152557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561155e57816020015b61154b614dea565b8152602001906001900390816115435790505b50915060005b818110156115eb576115ad600d600087878581811061159357634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020614373565b8382815181106115cd57634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806115e39061585f565b915050611564565b505b5092915050565b6000828152600d60205260408082206001810154600282015492516331a9108f60e11b81529193926001600160a01b0390911691636352211e9161163e9160040190815260200190565b60206040518083038186803b15801561165657600080fd5b505afa15801561166a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168e9190614fb2565b9050336001600160a01b038216146116d65760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6000806116e286614a5d565b91509150808511156117365760405162461bcd60e51b815260206004820152601660248201527f616d6f756e7420657863656564732062616c616e636500000000000000000000604482015260640161080e565b6117617f000000000000000000000000000000000000000000000000000000000000000084876149e5565b600061176d8683615805565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631bd396746117a883866157ae565b6040518263ffffffff1660e01b81526004016117c691815260200190565b60206040518083038186803b1580156117de57600080fd5b505afa1580156117f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611816919061538e565b60098601556118258184615805565b600886015560408051838152602081018590526001600160a01b0386169189917f251cec697c3733beaecd18442a10267faf29ba8ec86451eb9c94416e55de752b910160405180910390a350505050505050565b60008061188583614a5d565b949350505050565b6006546001600160a01b031633146118d55760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b6002600054141561194c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080e565b60026000908155818152600d602052604090208054821480156119735750600a81015460ff165b6119ae5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206974656d60a01b604482015260640161080e565b6000828152600f6020908152604080832083805290915281205433919060ff1615806119fc57506000848152600f602090815260408083206001600160a01b038616845290915290205460ff165b611a485760405162461bcd60e51b815260206004820152600f60248201527f6e6f742077686974656c69737465640000000000000000000000000000000000604482015260640161080e565b60068301546007840154600090611a5f9083615805565b9050811561217a5760058501546001600160a01b03166000818152600e602052604090208054611aa357611a9e6001600160a01b038316873087614ab1565b611c43565b611ab86001600160a01b038316873087614ab1565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820185905283169063095ea7b390604401602060405180830381600087803b158015611b2257600080fd5b505af1158015611b36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5a9190615278565b506040516338ed173960e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed173990611bb290879085908790309042906004016156e6565b600060405180830381600087803b158015611bcc57600080fd5b505af1158015611be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c0891908101906151e5565b90508060018251611c199190615805565b81518110611c3757634e487b7160e01b600052603260045260246000fd5b60200260200101519350505b600787015415611e325760035415611da2576127106003548860070154611c6a91906157e6565b611c7491906157c6565b94506000858860070154611c889190615805565b600389015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb90604401602060405180830381600087803b158015611cda57600080fd5b505af1158015611cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d129190615278565b506004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820188905284169063a9059cbb90604401602060405180830381600087803b158015611d6357600080fd5b505af1158015611d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9b9190615278565b5050611e32565b6003870154600788015460405163a9059cbb60e01b81526001600160a01b03928316600482015260248101919091529083169063a9059cbb90604401602060405180830381600087803b158015611df857600080fd5b505af1158015611e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e309190615278565b505b82156121775760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b158015611ec257600080fd5b505af1158015611ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efa9190615278565b50604051637acb775760e01b8152600481018490523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637acb775790604401602060405180830381600087803b158015611f6357600080fd5b505af1158015611f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9b9190615278565b50604051630f41a04d60e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e83409a90602401600060405180830381600087803b158015611ffd57600080fd5b505af1158015612011573d6000803e3d6000fd5b505050508260008860090154116120295760006120c7565b6009880154604051637965d56d60e01b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637965d56d9060240160206040518083038186803b15801561208f57600080fd5b505afa1580156120a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c7919061538e565b6120d191906157ae565b600888018190556040516306f4e59d60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631bd396749060240160206040518083038186803b15801561213957600080fd5b505afa15801561214d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612171919061538e565b60098801555b50505b60018501546002860154604051632142170760e11b81523060048201526001600160a01b03878116602483015260448201929092529116906342842e0e90606401600060405180830381600087803b1580156121d557600080fd5b505af11580156121e9573d6000803e3d6000fd5b50505050600485810180546001600160a01b0319166001600160a01b0387811691909117909155600a8701805460ff19169055601154604051634cc8221560e01b81529283018990521690634cc8221590602401600060405180830381600087803b15801561225757600080fd5b505af115801561226b573d6000803e3d6000fd5b5050604051633e23bcbb60e11b8152600b60048201526001600160a01b03871660248201526044810189905273DecC66Ac03a22166917F301Bb2EF21FA3F3c28329250637c477976915060640160006040518083038186803b1580156122d057600080fd5b505af41580156122e4573d6000803e3d6000fd5b505050506001850154600286015460405163589a174360e01b815260048101919091526000916001600160a01b03169063589a17439060240160206040518083038186803b15801561233557600080fd5b505afa158015612349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236d9190614fb2565b6001600160a01b03818116600090815260096020526040908190205490516338b4afd960e01b8152911660048201526024810189905290915073DecC66Ac03a22166917F301Bb2EF21FA3F3c2832906338b4afd99060440160006040518083038186803b1580156123dd57600080fd5b505af41580156123f1573d6000803e3d6000fd5b5050506000888152600f602090815260408083208380528252808320805460ff19908116909155308452928190208054909316600190811790935560028a0154928a015460058b015460068c015460088d015484516001600160a01b038e8116825293841696810196909652858501919091526060850152608084018a9052915193945016918a917f629cadcd430142dd9c11f4216494dcd6c02127ada59395b2ba41e867f654fae4919081900360a00190a4505060016000555050505050565b6006546001600160a01b031633146124fa5760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b0381161515806125115750600354155b61255d5760405162461bcd60e51b815260206004820152601560248201527f696e76616c69642066656520636f6c6c6563746f720000000000000000000000604482015260640161080e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146125c75760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316141561260657600080fd5b6001600160a01b0381166000908152600860209081526040808320805460ff19169055600e909152812061263991614f09565b6001600160a01b038116600090815260016020526040812081905560105490805b828110156127595781156126fc576010818154811061268957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031660106126ab600184615805565b815481106126c957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550612747565b836001600160a01b03166010828154811061272757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561274757600191505b806127518161585f565b91505061265a565b50801561138157601080548061277f57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b3360009081526007602052604090205460ff166128055760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f742077686974656c697374656400000000000000604482015260640161080e565b6001600160a01b0382166000908152600c602090815260408083208484529091529020548015610c22576001600160a01b038481166000908152600a6020526040902054166128a75760405161285a90614f2a565b604051809103906000f080158015612876573d6000803e3d6000fd5b506001600160a01b038581166000908152600a6020526040902080546001600160a01b031916929091169190911790555b6001600160a01b038481166000908152600a60205260409081902054905163e33b870760e01b81526004810184905291169063e33b870790602401600060405180830381600087803b1580156128fc57600080fd5b505af115801561137b573d6000803e3d6000fd5b6011546060906000908190612930906001600160a01b03168786886140e2565b915091508067ffffffffffffffff81111561295b57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561299457816020015b612981614dea565b8152602001906001900390816129795790505b5092508160005b82811015612a94576040808301516000908152600d602052206129bd90614373565b8582815181106129dd57634e487b7160e01b600052603260045260246000fd5b60209081029190910181019190915260115460408051630e891c2760e01b815285516004820152928501516024840152840151604483015287151560648301526001600160a01b031690630e891c279060840160606040518083038186803b158015612a4857600080fd5b505afa158015612a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a80919061531b565b915080612a8c8161585f565b91505061299b565b505050509392505050565b6001600160a01b038085166000908152600a60205260409020546060911680156107c157600080612ad2838887896140e2565b915091508067ffffffffffffffff811115612afd57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612b3657816020015b612b23614dea565b815260200190600190039081612b1b5790505b5093508160005b828110156107bc576040808301516000908152600d60205220612b5f90614373565b868281518110612b7f57634e487b7160e01b600052603260045260246000fd5b60209081029190910181019190915260408051630e891c2760e01b815284516004820152918401516024830152830151604482015287151560648201526001600160a01b03861690630e891c279060840160606040518083038186803b158015612be857600080fd5b505afa158015612bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c20919061531b565b915080612c2c8161585f565b915050612b3d565b600080612c4083614a5d565b509392505050565b60026000541415612c9b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080e565b60026000908155818152600d60205260409020600381015481546001600160a01b03909116908314612d0f5760405162461bcd60e51b815260206004820152600f60248201527f696e76616c6964206974656d2069640000000000000000000000000000000000604482015260640161080e565b6001600160a01b0381163314612d675760405162461bcd60e51b815260206004820152601860248201527f63616c6c6572206973206e6f74207468652073656c6c65720000000000000000604482015260640161080e565b6001820154600283015460038401546040516323b872dd60e01b81523060048201526001600160a01b03918216602482015260448101839052921691829081906323b872dd90606401600060405180830381600087803b158015612dca57600080fd5b505af1158015612dde573d6000803e3d6000fd5b505050506003850180546001600160a01b0319908116909155600480870180546001600160a01b038816931683179055600a8701805460ff19169055604051633e23bcbb60e11b8152600b9181019190915260248101919091526044810187905273DecC66Ac03a22166917F301Bb2EF21FA3F3c283290637c4779769060640160006040518083038186803b158015612e7657600080fd5b505af4158015612e8a573d6000803e3d6000fd5b5050601154604051634cc8221560e01b8152600481018a90526001600160a01b039091169250634cc822159150602401600060405180830381600087803b158015612ed457600080fd5b505af1158015612ee8573d6000803e3d6000fd5b505060405163589a174360e01b815260048101859052600092506001600160a01b038616915063589a17439060240160206040518083038186803b158015612f2f57600080fd5b505afa158015612f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f679190614fb2565b6001600160a01b03818116600090815260096020526040908190205490516338b4afd960e01b8152911660048201526024810189905290915073DecC66Ac03a22166917F301Bb2EF21FA3F3c2832906338b4afd99060440160006040518083038186803b158015612fd757600080fd5b505af4158015612feb573d6000803e3d6000fd5b5050505085600801546000141561305d5760405162c6239360e11b815260048101849052600060248201526001600160a01b0385169063018c472690604401600060405180830381600087803b15801561304457600080fd5b505af1158015613058573d6000803e3d6000fd5b505050505b6002860154600187015487546040516001600160a01b03909216917fce438b6cfecd51c87c70deb47c0e4af51fa8bf618405102abcfe6a8408c1385190600090a4505060016000555050505050565b6130b4614dea565b6000828152600d602052604090206130cb90614373565b92915050565b6060601080548060200260200160405190810160405280929190818152602001828054801561312957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161310b575b5050505050905090565b6000818152600d602052604080822060018101546002820154925163589a174360e01b81529193926001600160a01b039091169163589a17439161317d9160040190815260200190565b60206040518083038186803b15801561319557600080fd5b505afa1580156131a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cd9190614fb2565b9050336001600160a01b038216146132275760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74207468652063726561746f7200000000000000604482015260640161080e565b50506000908152600f602090815260408083208380529091529020805460ff19169055565b6006546001600160a01b031633146132945760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b80806133045760405162461bcd60e51b815260206004820152601060248201527f656d707479206275796572206c69737400000000000000000000000000000000604482015260640161080e565b6000848152600d602052604080822060018101546002820154925163589a174360e01b81529193926001600160a01b039091169163589a17439161334e9160040190815260200190565b60206040518083038186803b15801561336657600080fd5b505afa15801561337a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339e9190614fb2565b90506001600160a01b03811633146133f85760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74207468652063726561746f7200000000000000604482015260640161080e565b6000868152600f602090815260408083203080855292529091205460ff16156134635760405162461bcd60e51b815260206004820152601360248201527f6e6f7420696e697469616c206c697374696e6700000000000000000000000000604482015260640161080e565b6000878152600f602090815260408083208380529091528120805460ff191660011790555b8481101561137b5760008787838181106134b257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906134c79190614f96565b60008a8152600f602052604081209192506001600160a01b03808416908616141591908a8a8681811061350a57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061351f9190614f96565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905550806135528161585f565b915050613488565b3360009081526007602052604090205460ff166135b95760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f742077686974656c697374656400000000000000604482015260640161080e565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e9060240160206040518083038186803b1580156135fc57600080fd5b505afa158015613610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136349190614fb2565b6001600160a01b0384166000908152600c60209081526040808320868452909152902054909150806137955760056000815461366f9061585f565b91829055506001600160a01b038581166000818152600c6020908152604080832089845282528083208690558051610160810182528681528083019485528082018a8152606082018581528a88166080840190815260a0840187815260c0850188815260e0860189815261010087018a815261012088018b815261014089018c81528f8d52600d909b5298909a209651875599516001870180546001600160a01b0319908116928e169290921790559451600287015592516003860180548616918c1691909117905590516004850180548516918b169190911790555160058401805490931698169790971790559451600686015592516007850155905160088401559051600983015551600a909101805460ff191691151591909117905590506137da565b6000818152600d602052604090206003810180546001600160a01b03199081169091556004820180549091166001600160a01b038516179055600a01805460ff191690555b604051633e23bcbb60e11b8152600b60048201526001600160a01b03831660248201526044810182905273DecC66Ac03a22166917F301Bb2EF21FA3F3c283290637c4779769060640160006040518083038186803b15801561383b57600080fd5b505af415801561384f573d6000803e3d6000fd5b5050505082846001600160a01b0316827f2e979c2abee3feb11b09d0199e22cecd37f21b413de97abf9e75bc1d0853dfe760405160405180910390a450505050565b600260005414156138e45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080e565b600260009081556001600160a01b0384168152600860205260409020543390869060ff1661394c5760405162461bcd60e51b815260206004820152601560248201527434b73b30b634b2103830bcb6b2b73a103a37b5b2b760591b604482015260640161080e565b6040516331a9108f60e11b8152600481018790526001600160a01b038084169190831690636352211e9060240160206040518083038186803b15801561399157600080fd5b505afa1580156139a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139c99190614fb2565b6001600160a01b031614613a0d5760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b038516600090815260016020526040902054841015613a655760405162461bcd60e51b815260206004820152600d60248201526c707269636520746f6f206c6f7760981b604482015260640161080e565b6127108361ffff161115613abb5760405162461bcd60e51b815260206004820152601b60248201527f7374616b696e672070657263656e7461676520746f6f20686967680000000000604482015260640161080e565b6002548361ffff161015613b115760405162461bcd60e51b815260206004820152601a60248201527f7374616b696e672070657263656e7461676520746f6f206c6f77000000000000604482015260640161080e565b6000612710613b2461ffff8616876157e6565b613b2e91906157c6565b90506000613b3c8287615805565b6001600160a01b038a166000908152600c602090815260408083208c845290915290205490915080613d5b57600560008154613b779061585f565b919050819055600c60008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b815260200190815260200160002081905590506040518061016001604052808281526020018b6001600160a01b031681526020018a8152602001866001600160a01b03168152602001306001600160a01b03168152602001896001600160a01b03168152602001888152602001838152602001600081526020016000815260200160011515815250600d60008381526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0160006101000a81548160ff021916908315150217905550905050613dc6565b6000818152600d602052604090206003810180546001600160a01b038089166001600160a01b031992831617909255600483018054821630179055600583018054928c16929091169190911790556006810188905560078101839055600a01805460ff191660011790555b60405162c6239360e11b8152600481018a9052600160248201526001600160a01b038b169063018c472690604401600060405180830381600087803b158015613e0e57600080fd5b505af1158015613e22573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b038881166004830152306024830152604482018d9052871692506323b872dd9150606401600060405180830381600087803b158015613e7657600080fd5b505af1158015613e8a573d6000803e3d6000fd5b505050506001600160a01b038581166000908152600b6020526040908190205490516338b4afd960e01b8152911660048201526024810182905273DecC66Ac03a22166917F301Bb2EF21FA3F3c2832906338b4afd99060440160006040518083038186803b158015613efb57600080fd5b505af4158015613f0f573d6000803e3d6000fd5b505060115460405163e33b870760e01b8152600481018590526001600160a01b03909116925063e33b87079150602401600060405180830381600087803b158015613f5957600080fd5b505af1158015613f6d573d6000803e3d6000fd5b505060405163589a174360e01b8152600481018c9052600092506001600160a01b038d16915063589a17439060240160206040518083038186803b158015613fb457600080fd5b505afa158015613fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613fec9190614fb2565b604051633e23bcbb60e11b8152600960048201526001600160a01b03821660248201526044810184905290915073DecC66Ac03a22166917F301Bb2EF21FA3F3c283290637c4779769060640160006040518083038186803b15801561405057600080fd5b505af4158015614064573d6000803e3d6000fd5b5050604080516001600160a01b038a81168252600060208301528d811682840152606082018d90526080820188905260a0820189905291518e9450918f16925085917f1f2bc42afd1ecfa86cd3bd1c90c99e3c356a871aba9768b1d4abe60dc41d6aa79181900360c00190a450506001600055505050505050505050565b61410660405180606001604052806000815260200160008152602001600081525090565b6000841561421c57604051634a83e9cd60e11b8152600481018690526001600160a01b03871690630e891c27908290639507d39a9060240160606040518083038186803b15801561415657600080fd5b505afa15801561416a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061418e919061531b565b604080516001600160e01b031960e085901b16815282516004820152602083015160248201529101516044820152861515606482015260840160606040518083038186803b1580156141df57600080fd5b505afa1580156141f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614217919061531b565b614295565b604051631b253ed160e21b815284151560048201526001600160a01b03871690636c94fb449060240160606040518083038186803b15801561425d57600080fd5b505afa158015614271573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614295919061531b565b915081835b6000811180156142ad5750604082015115155b1561436857826142bc8161585f565b60408051630e891c2760e01b8152855160048201526020860151602482015290850151604482015288151560648201529094506001600160a01b038a169150630e891c279060840160606040518083038186803b15801561431c57600080fd5b505afa158015614330573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614354919061531b565b91508061436081615848565b91505061429a565b505094509492505050565b61437b614dea565b8154815260018201546001600160a01b039081166020830152600283015460408301526005830154166101a082015260068201546101c0820152600a82015460ff161580156101208301526145685760038201546001600160a01b039081166101408301819052604051637ae2b9c160e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000009091169063f5c573829060240160006040518083038186803b15801561443d57600080fd5b505afa158015614451573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526144799190810190615294565b610160820152610140810151604051633c02914560e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690637805228a9060240160006040518083038186803b1580156144e857600080fd5b505afa1580156144fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526145249190810190615294565b6101808201526101c08101516007830154614541906127106157e6565b61454b91906157c6565b6101e0820152805161455c90614a5d565b50610200820152614773565b80602001516001600160a01b0316636352211e82604001516040518263ffffffff1660e01b815260040161459e91815260200190565b60206040518083038186803b1580156145b657600080fd5b505afa1580156145ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145ee9190614fb2565b6001600160a01b0390811660c08301819052604051637ae2b9c160e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000009091169063f5c573829060240160006040518083038186803b15801561465b57600080fd5b505afa15801561466f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526146979190810190615294565b60e082015260c0810151604051633c02914560e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690637805228a9060240160006040518083038186803b15801561470457600080fd5b505afa158015614718573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526147409190810190615294565b6101008201528051600090819061475690614a5d565b909250905061476581836157ae565b610200840152610220830152505b80602001516001600160a01b031663589a174382604001516040518263ffffffff1660e01b81526004016147a991815260200190565b60206040518083038186803b1580156147c157600080fd5b505afa1580156147d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147f99190614fb2565b6001600160a01b0390811660608301819052604051637ae2b9c160e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000009091169063f5c573829060240160006040518083038186803b15801561486657600080fd5b505afa15801561487a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526148a29190810190615294565b60808201526060810151604051633c02914560e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690637805228a9060240160006040518083038186803b15801561490f57600080fd5b505afa158015614923573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261494b9190810190615294565b60a0820152919050565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e9060240160206040518083038186803b15801561499857600080fd5b505afa9250505080156149c8575060408051601f3d908101601f191682019092526149c591810190614fb2565b60015b6149d4575060016130cb565b6001600160a01b03161590506130cb565b6040516001600160a01b03831660248201526044810182905261138190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152614ae9565b6000818152600d6020526040812081908180614a7883614bbb565b909250905060006002614a8b8385615805565b614a9591906157c6565b90506000614aa38285615805565b989197509095505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c229085906323b872dd60e01b90608401614a11565b6000614b3e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614c709092919063ffffffff16565b8051909150156113815780806020019051810190614b5c9190615278565b6113815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161080e565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637965d56d85600901546040518263ffffffff1660e01b8152600401614c1291815260200190565b60206040518083038186803b158015614c2a57600080fd5b505afa158015614c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c62919061538e565b600890940154939492505050565b6060614c7f8484600085614c89565b90505b9392505050565b606082471015614cea5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161080e565b843b614d385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161080e565b600080866001600160a01b03168587604051614d5491906155f6565b60006040518083038185875af1925050503d8060008114614d91576040519150601f19603f3d011682016040523d82523d6000602084013e614d96565b606091505b5091509150614da6828286614db1565b979650505050505050565b60608315614dc0575081614c82565b825115614dd05782518084602001fd5b8160405162461bcd60e51b815260040161080e91906156c0565b6040518061024001604052806000815260200160006001600160a01b031681526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b03168152602001606081526020016060815260200160001515815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b828054828255906000526020600020908101928215614ef9579160200282015b82811115614ef957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614ec4565b50614f05929150614f37565b5090565b5080546000825590600052602060002090810190614f279190614f37565b50565b6106c0806158ca83390190565b5b80821115614f055760008155600101614f38565b60008083601f840112614f5d578182fd5b50813567ffffffffffffffff811115614f74578182fd5b6020830191508360208260051b8501011115614f8f57600080fd5b9250929050565b600060208284031215614fa7578081fd5b8135614c82816158a6565b600060208284031215614fc3578081fd5b8151614c82816158a6565b600080600060608486031215614fe2578182fd5b8335614fed816158a6565b92506020840135614ffd816158a6565b929592945050506040919091013590565b60008060408385031215615020578182fd5b823561502b816158a6565b946020939093013593505050565b600080600080600060a08688031215615050578081fd5b853561505b816158a6565b9450602086013593506040860135615072816158a6565b925060608601359150608086013561ffff8116811461508f578182fd5b809150509295509295909350565b6000806000606084860312156150b1578283fd5b83356150bc816158a6565b92506020848101359250604085013567ffffffffffffffff8111156150df578283fd5b8501601f810187136150ef578283fd5b80356151026150fd8261578a565b615759565b8082825284820191508484018a868560051b8701011115615121578687fd5b8694505b8385101561514c578035615138816158a6565b835260019490940193918501918501615125565b5080955050505050509250925092565b60008060008060808587031215615171578384fd5b843561517c816158a6565b93506020850135925060408501359150606085013561519a816158bb565b939692955090935050565b600080602083850312156151b7578182fd5b823567ffffffffffffffff8111156151cd578283fd5b6151d985828601614f4c565b90969095509350505050565b600060208083850312156151f7578182fd5b825167ffffffffffffffff81111561520d578283fd5b8301601f8101851361521d578283fd5b805161522b6150fd8261578a565b80828252848201915084840188868560051b870101111561524a578687fd5b8694505b8385101561526c57805183526001949094019391850191850161524e565b50979650505050505050565b600060208284031215615289578081fd5b8151614c82816158bb565b6000602082840312156152a5578081fd5b815167ffffffffffffffff808211156152bc578283fd5b818401915084601f8301126152cf578283fd5b8151818111156152e1576152e1615890565b6152f4601f8201601f1916602001615759565b915080825285602082850101111561530a578384fd5b6107c181602084016020860161581c565b60006060828403121561532c578081fd5b6040516060810181811067ffffffffffffffff8211171561534f5761534f615890565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060208284031215615387578081fd5b5035919050565b60006020828403121561539f578081fd5b5051919050565b6000806000604084860312156153ba578081fd5b83359250602084013567ffffffffffffffff8111156153d7578182fd5b6153e386828701614f4c565b9497909650939450505050565b60008060408385031215615402578182fd5b50508035926020909101359150565b600080600060608486031215615425578081fd5b8335925060208401359150604084013561543e816158bb565b809150509250925092565b6000815180845261546181602086016020860161581c565b601f01601f19169290920160200192915050565b600061024082518452602083015161549860208601826001600160a01b03169052565b506040830151604085015260608301516154bd60608601826001600160a01b03169052565b5060808301518160808601526154d582860182615449565b91505060a083015184820360a08601526154ef8282615449565b91505060c083015161550c60c08601826001600160a01b03169052565b5060e083015184820360e08601526155248282615449565b915050610100808401518583038287015261553f8382615449565b92505050610120808401516155578287018215159052565b5050610140838101516001600160a01b03169085015261016080840151858303828701526155858382615449565b9250505061018080840151858303828701526155a18382615449565b925050506101a0808401516155c0828701826001600160a01b03169052565b50506101c083810151908501526101e0808401519085015261020080840151908501526102209283015192909301919091525090565b6000825161560881846020870161581c565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156156535783516001600160a01b03168352928401929184019160010161562e565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156156b357603f198886030184526156a1858351615475565b94509285019290850190600101615685565b5092979650505050505050565b602081526000614c826020830184615449565b602081526000614c826020830184615475565b600060a082018783526020878185015260a0604085015281875480845260c0860191508885528285209350845b818110156157385784546001600160a01b031683526001948501949284019201615713565b50506001600160a01b03969096166060850152505050608001529392505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561578257615782615890565b604052919050565b600067ffffffffffffffff8211156157a4576157a4615890565b5060051b60200190565b600082198211156157c1576157c161587a565b500190565b6000826157e157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156158005761580061587a565b500290565b6000828210156158175761581761587a565b500390565b60005b8381101561583757818101518382015260200161581f565b83811115610c225750506000910152565b6000816158575761585761587a565b506000190190565b60006000198214156158735761587361587a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114614f2757600080fd5b8015158114614f2757600080fdfe60a060405234801561001057600080fd5b5033606081901b608052610687610039600039600081816101e0015261042301526106876000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f7dcfa31161005b5780638f7dcfa3146100f7578063949d225d146100ff5780639507d39a14610116578063e33b87071461012957600080fd5b80630e891c271461008d57806313d8c840146100c75780634cc82215146100cf5780636c94fb44146100e4575b600080fd5b6100a061009b36600461056f565b61013c565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b6100a0610180565b6100e26100dd3660046105f1565b6101de565b005b6100a06100f2366004610555565b610323565b6100a0610367565b61010860005481565b6040519081526020016100be565b6100a06101243660046105f1565b6103c4565b6100e26101373660046105f1565b610421565b61016060405180606001604052806000815260200160008152602001600081525090565b6101798261016f5783516103c4565b83602001516103c4565b9392505050565b6101a460405180606001604052806000815260200160008152602001600081525090565b5060028054600090815260036020908152604091829020825160608101845281548152600182015492810192909252909201549082015290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146102685760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60008181526003602052604081208054600190910154825491929091819061028f90610609565b91829055506102a75760006002819055600155610303565b8260015414156102c857600083815260036020526040902060019081015490555b8260025414156102e5576000838152600360205260409020546002555b60008281526003602052604080822060010183905582825290208290555b505060009081526003602052604081208181556001810182905560020155565b61034760405180606001604052806000815260200160008152602001600081525090565b8161035957610354610180565b610361565b610361610367565b92915050565b61038b60405180606001604052806000815260200160008152602001600081525090565b50600180546000908152600360209081526040918290208251606081018452815481529381015491840191909152600201549082015290565b6103e860405180606001604052806000815260200160008152602001600081525090565b50600090815260036020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146104a65760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161025f565b6104ca60405180606001604052806000815260200160008152602001600081525090565b604081018290526000805490806104e083610620565b909155506104f75760028290556001829055610516565b6002805480835260009081526003602052604090206001018390558290555b60009182526003602090815260409283902082518155908201516001820155910151600290910155565b8035801515811461055057600080fd5b919050565b600060208284031215610566578081fd5b61017982610540565b6000808284036080811215610582578182fd5b606081121561058f578182fd5b506040516060810181811067ffffffffffffffff821117156105bf57634e487b7160e01b83526041600452602483fd5b60409081528435825260208086013590830152848101359082015291506105e860608401610540565b90509250929050565b600060208284031215610602578081fd5b5035919050565b6000816106185761061861063b565b506000190190565b60006000198214156106345761063461063b565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203da6ac77d46979253aeb19f11d6a36c43038f48d09f97ce175555024bbd37e8164736f6c6343000804003363616c6c6572206973206e6f7420746865206f776e6572000000000000000000a264697066735822122021636fb5769276720f4964446f8b160f3aaa4f3f00a44943aeffce25a588086964736f6c6343000804003360a060405234801561001057600080fd5b5033606081901b608052610687610039600039600081816101e0015261042301526106876000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f7dcfa31161005b5780638f7dcfa3146100f7578063949d225d146100ff5780639507d39a14610116578063e33b87071461012957600080fd5b80630e891c271461008d57806313d8c840146100c75780634cc82215146100cf5780636c94fb44146100e4575b600080fd5b6100a061009b36600461056f565b61013c565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b6100a0610180565b6100e26100dd3660046105f1565b6101de565b005b6100a06100f2366004610555565b610323565b6100a0610367565b61010860005481565b6040519081526020016100be565b6100a06101243660046105f1565b6103c4565b6100e26101373660046105f1565b610421565b61016060405180606001604052806000815260200160008152602001600081525090565b6101798261016f5783516103c4565b83602001516103c4565b9392505050565b6101a460405180606001604052806000815260200160008152602001600081525090565b5060028054600090815260036020908152604091829020825160608101845281548152600182015492810192909252909201549082015290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146102685760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60008181526003602052604081208054600190910154825491929091819061028f90610609565b91829055506102a75760006002819055600155610303565b8260015414156102c857600083815260036020526040902060019081015490555b8260025414156102e5576000838152600360205260409020546002555b60008281526003602052604080822060010183905582825290208290555b505060009081526003602052604081208181556001810182905560020155565b61034760405180606001604052806000815260200160008152602001600081525090565b8161035957610354610180565b610361565b610361610367565b92915050565b61038b60405180606001604052806000815260200160008152602001600081525090565b50600180546000908152600360209081526040918290208251606081018452815481529381015491840191909152600201549082015290565b6103e860405180606001604052806000815260200160008152602001600081525090565b50600090815260036020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146104a65760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161025f565b6104ca60405180606001604052806000815260200160008152602001600081525090565b604081018290526000805490806104e083610620565b909155506104f75760028290556001829055610516565b6002805480835260009081526003602052604090206001018390558290555b60009182526003602090815260409283902082518155908201516001820155910151600290910155565b8035801515811461055057600080fd5b919050565b600060208284031215610566578081fd5b61017982610540565b6000808284036080811215610582578182fd5b606081121561058f578182fd5b506040516060810181811067ffffffffffffffff821117156105bf57634e487b7160e01b83526041600452602483fd5b60409081528435825260208086013590830152848101359082015291506105e860608401610540565b90509250929050565b600060208284031215610602578081fd5b5035919050565b6000816106185761061861063b565b506000190190565b60006000198214156106345761063461063b565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203da6ac77d46979253aeb19f11d6a36c43038f48d09f97ce175555024bbd37e8164736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102485760003560e01c8063a51254211161013b578063ca5e553e116100b8578063f887ea401161007c578063f887ea40146105a0578063fa00d03d146105c7578063fa485b68146105da578063fdd1646d146105ed578063ff402d231461060057600080fd5b8063ca5e553e14610533578063d1eaa0641461053b578063ddca3f4314610571578063eb556b501461057a578063f2fde38b1461058d57600080fd5b8063b833d7c8116100ff578063b833d7c8146104b3578063bd9a549f146104da578063c415b95c146104ed578063c68a0e1614610500578063c7be7a491461051357600080fd5b8063a512542114610440578063a82f15c214610453578063ab1a536914610466578063ab60636c14610479578063b4d918e5146104a057600080fd5b80634e7f1e20116101c95780637cbc23731161018d5780637cbc2373146103e1578063825a926f146103f45780638465093e146104075780638c77b5b71461041a578063a42dce801461042d57600080fd5b80634e7f1e201461038257806369fe0e2d146103955780636c0e3b09146103a85780637042bdb9146103bb5780637488cc8f146103ce57600080fd5b80632b47a569116102105780632b47a569146102e65780633e7d7feb146102fd578063455bf0b61461031057806347d5d502146103305780634cf088d91461034357600080fd5b806314d500351461024d578063210009cf1461027657806327df59ba1461028b578063285c4880146102b3578063295f36de146102c6575b600080fd5b61026061025b36600461515c565b610627565b60405161026d919061565f565b60405180910390f35b610289610284366004614f96565b6107ca565b005b61029e610299366004614f96565b610838565b6040805192835260208301919091520161026d565b6102896102c136600461509d565b61096d565b6102d96102d4366004614f96565b610c28565b60405161026d9190615612565b6102ef60025481565b60405190815260200161026d565b61028961030b366004615376565b610c9e565b6102ef61031e366004614f96565b60016020526000908152604090205481565b61028961033e36600461500e565b610d3d565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161026d565b610289610390366004614fce565b610e49565b6102896103a3366004615376565b61116e565b6102896103b636600461500e565b611253565b61029e6103c9366004614f96565b611386565b6102606103dc3660046151a5565b6114f5565b6102896103ef3660046153f0565b6115f4565b6102ef610402366004615376565b611879565b610289610415366004614f96565b61188d565b610289610428366004615376565b6118f9565b61028961043b366004614f96565b6124b2565b61028961044e366004614f96565b61257f565b610289610461366004614fce565b6127a6565b610260610474366004615411565b612910565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6102606104ae36600461515c565b612a9f565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6102ef6104e8366004615376565b612c34565b60045461036a906001600160a01b031681565b61028961050e366004615376565b612c48565b610526610521366004615376565b6130ac565b60405161026d91906156d3565b6102d96130d1565b6102ef61054936600461500e565b6001600160a01b03919091166000908152600c60209081526040808320938352929052205490565b6102ef60035481565b610289610588366004615376565b613133565b61028961059b366004614f96565b61324c565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6102896105d53660046153a6565b6132b6565b6102896105e836600461500e565b61355a565b6102896105fb366004615039565b613891565b61036a7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038085166000908152600b60205260409020546060911680156107c15760008061065a838887896140e2565b915091508067ffffffffffffffff81111561068557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106be57816020015b6106ab614dea565b8152602001906001900390816106a35790505b5093508160005b828110156107bc576040808301516000908152600d602052206106e790614373565b86828151811061070757634e487b7160e01b600052603260045260246000fd5b60209081029190910181019190915260408051630e891c2760e01b815284516004820152918401516024830152830151604482015287151560648201526001600160a01b03861690630e891c279060840160606040518083038186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a8919061531b565b9150806107b48161585f565b9150506106c5565b505050505b50949350505050565b6006546001600160a01b031633146108175760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a83398151915260448201526064015b60405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19169055565b6001600160a01b038082166000908152600a6020526040812054909182911680156108d157806001600160a01b031663949d225d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561089657600080fd5b505afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce919061538e565b92505b6001600160a01b038085166000908152600b602052604090205416801561096657806001600160a01b031663949d225d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610963919061538e565b92505b5050915091565b6006546001600160a01b031633146109b55760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b600082116109fd5760405162461bcd60e51b81526020600482015260156024820152746d696e696d756d20707269636520746f6f206c6f7760581b604482015260640161080e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316148015610a3d57508051155b80610b2f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614158015610abe5750826001600160a01b031681600081518110610aab57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316145b8015610b2f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168160018351610afe9190615805565b81518110610b1c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316145b610b6b5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420726f75746560981b604482015260640161080e565b6001600160a01b03831660009081526008602052604090205460ff16610bef576010805460018082019092557f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720180546001600160a01b0319166001600160a01b0386169081179091556000908152600860205260409020805460ff191690911790555b6001600160a01b0383166000908152600160209081526040808320859055600e82529091208251610c2292840190614ea4565b50505050565b6001600160a01b0381166000908152600e6020908152604091829020805483518184028101840190945280845260609392830182828015610c9257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c74575b50505050509050919050565b6006546001600160a01b03163314610ce65760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b612710811115610d385760405162461bcd60e51b815260206004820152601b60248201527f6d696e696d756d2070657263656e7461676520746f6f20686967680000000000604482015260640161080e565b600255565b6006546001600160a01b03163314610d855760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b03821660009081526008602052604090205460ff16610de55760405162461bcd60e51b815260206004820152601560248201527434b73b30b634b2103830bcb6b2b73a103a37b5b2b760591b604482015260640161080e565b60008111610e2d5760405162461bcd60e51b81526020600482015260156024820152746d696e696d756d20707269636520746f6f206c6f7760581b604482015260640161080e565b6001600160a01b03909116600090815260016020526040902055565b6001600160a01b0382166000908152600c602090815260408083208484529091529020548015610c2257610e7d8383614955565b610ec95760405162461bcd60e51b815260206004820152601360248201527f746f6b656e206973206e6f74206275726e656400000000000000000000000000604482015260640161080e565b6001600160a01b038481166000908152600a6020526040908190205490516338b4afd960e01b8152911660048201526024810182905273__$44a7a846c777c9454ac00bd07cdc6ca7e7$__906338b4afd99060440160006040518083038186803b158015610f3657600080fd5b505af4158015610f4a573d6000803e3d6000fd5b5050506000828152600d602052604080822060098101549151637965d56d60e01b8152600481019290925292507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637965d56d9060240160206040518083038186803b158015610fc357600080fd5b505afa158015610fd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffb919061538e565b9050801561103d57600482015461103d907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0316836149e5565b60048201546001600160a01b039081166000908152600b602052604090205416156110d4576004828101546001600160a01b039081166000908152600b602052604090819020549051634cc8221560e01b81529283018690521690634cc8221590602401600060405180830381600087803b1580156110bb57600080fd5b505af11580156110cf573d6000803e3d6000fd5b505050505b50506000818152600d602090815260408083208381556001810180546001600160a01b0319908116909155600282018590556003820180548216905560048201805482169055600582018054909116905560068101849055600781018490556008810184905560098101849055600a01805460ff191690556001600160a01b0386168352600c825280832085845290915281205550505050565b6006546001600160a01b031633146111b65760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6004546001600160a01b031661120e5760405162461bcd60e51b815260206004820152601560248201527f66656520636f6c6c6563746f72206e6f74207365740000000000000000000000604482015260640161080e565b61271081111561124e5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b604482015260640161080e565b600355565b6001600160a01b0382166000908152600c602090815260408083208484529091529020548015611381576000818152600d60205260409020600401546001600160a01b0316338114806112ae5750336001600160a01b038516145b6112fa5760405162461bcd60e51b815260206004820152601560248201527f6f776e657220686173206e6f74206368616e6765640000000000000000000000604482015260640161080e565b6001600160a01b038181166000908152600b6020526040908190205490516338b4afd960e01b8152911660048201526024810183905273__$44a7a846c777c9454ac00bd07cdc6ca7e7$__906338b4afd99060440160006040518083038186803b15801561136757600080fd5b505af415801561137b573d6000803e3d6000fd5b50505050505b505050565b6001600160a01b038082166000908152600b6020526040812054909182911680156114ef576000816001600160a01b0316638f7dcfa36040518163ffffffff1660e01b815260040160606040518083038186803b1580156113e657600080fd5b505afa1580156113fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141e919061531b565b90505b6040810151156109665760008061143b8360400151614a5d565b909250905061144a81836157ae565b61145490876157ae565b955061146081866157ae565b6020840151604051634a83e9cd60e11b81529196506001600160a01b03861691639507d39a916114969160040190815260200190565b60606040518083038186803b1580156114ae57600080fd5b505afa1580156114c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e6919061531b565b92505050611421565b50915091565b60608180156115ed578067ffffffffffffffff81111561152557634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561155e57816020015b61154b614dea565b8152602001906001900390816115435790505b50915060005b818110156115eb576115ad600d600087878581811061159357634e487b7160e01b600052603260045260246000fd5b905060200201358152602001908152602001600020614373565b8382815181106115cd57634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806115e39061585f565b915050611564565b505b5092915050565b6000828152600d60205260408082206001810154600282015492516331a9108f60e11b81529193926001600160a01b0390911691636352211e9161163e9160040190815260200190565b60206040518083038186803b15801561165657600080fd5b505afa15801561166a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168e9190614fb2565b9050336001600160a01b038216146116d65760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6000806116e286614a5d565b91509150808511156117365760405162461bcd60e51b815260206004820152601660248201527f616d6f756e7420657863656564732062616c616e636500000000000000000000604482015260640161080e565b6117617f000000000000000000000000000000000000000000000000000000000000000084876149e5565b600061176d8683615805565b90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631bd396746117a883866157ae565b6040518263ffffffff1660e01b81526004016117c691815260200190565b60206040518083038186803b1580156117de57600080fd5b505afa1580156117f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611816919061538e565b60098601556118258184615805565b600886015560408051838152602081018590526001600160a01b0386169189917f251cec697c3733beaecd18442a10267faf29ba8ec86451eb9c94416e55de752b910160405180910390a350505050505050565b60008061188583614a5d565b949350505050565b6006546001600160a01b031633146118d55760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b6002600054141561194c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080e565b60026000908155818152600d602052604090208054821480156119735750600a81015460ff165b6119ae5760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964206974656d60a01b604482015260640161080e565b6000828152600f6020908152604080832083805290915281205433919060ff1615806119fc57506000848152600f602090815260408083206001600160a01b038616845290915290205460ff165b611a485760405162461bcd60e51b815260206004820152600f60248201527f6e6f742077686974656c69737465640000000000000000000000000000000000604482015260640161080e565b60068301546007840154600090611a5f9083615805565b9050811561217a5760058501546001600160a01b03166000818152600e602052604090208054611aa357611a9e6001600160a01b038316873087614ab1565b611c43565b611ab86001600160a01b038316873087614ab1565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820185905283169063095ea7b390604401602060405180830381600087803b158015611b2257600080fd5b505af1158015611b36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5a9190615278565b506040516338ed173960e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed173990611bb290879085908790309042906004016156e6565b600060405180830381600087803b158015611bcc57600080fd5b505af1158015611be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c0891908101906151e5565b90508060018251611c199190615805565b81518110611c3757634e487b7160e01b600052603260045260246000fd5b60200260200101519350505b600787015415611e325760035415611da2576127106003548860070154611c6a91906157e6565b611c7491906157c6565b94506000858860070154611c889190615805565b600389015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925084169063a9059cbb90604401602060405180830381600087803b158015611cda57600080fd5b505af1158015611cee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d129190615278565b506004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820188905284169063a9059cbb90604401602060405180830381600087803b158015611d6357600080fd5b505af1158015611d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9b9190615278565b5050611e32565b6003870154600788015460405163a9059cbb60e01b81526001600160a01b03928316600482015260248101919091529083169063a9059cbb90604401602060405180830381600087803b158015611df857600080fd5b505af1158015611e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e309190615278565b505b82156121775760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b158015611ec257600080fd5b505af1158015611ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efa9190615278565b50604051637acb775760e01b8152600481018490523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637acb775790604401602060405180830381600087803b158015611f6357600080fd5b505af1158015611f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9b9190615278565b50604051630f41a04d60e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e83409a90602401600060405180830381600087803b158015611ffd57600080fd5b505af1158015612011573d6000803e3d6000fd5b505050508260008860090154116120295760006120c7565b6009880154604051637965d56d60e01b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637965d56d9060240160206040518083038186803b15801561208f57600080fd5b505afa1580156120a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120c7919061538e565b6120d191906157ae565b600888018190556040516306f4e59d60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631bd396749060240160206040518083038186803b15801561213957600080fd5b505afa15801561214d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612171919061538e565b60098801555b50505b60018501546002860154604051632142170760e11b81523060048201526001600160a01b03878116602483015260448201929092529116906342842e0e90606401600060405180830381600087803b1580156121d557600080fd5b505af11580156121e9573d6000803e3d6000fd5b50505050600485810180546001600160a01b0319166001600160a01b0387811691909117909155600a8701805460ff19169055601154604051634cc8221560e01b81529283018990521690634cc8221590602401600060405180830381600087803b15801561225757600080fd5b505af115801561226b573d6000803e3d6000fd5b5050604051633e23bcbb60e11b8152600b60048201526001600160a01b03871660248201526044810189905273__$44a7a846c777c9454ac00bd07cdc6ca7e7$__9250637c477976915060640160006040518083038186803b1580156122d057600080fd5b505af41580156122e4573d6000803e3d6000fd5b505050506001850154600286015460405163589a174360e01b815260048101919091526000916001600160a01b03169063589a17439060240160206040518083038186803b15801561233557600080fd5b505afa158015612349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236d9190614fb2565b6001600160a01b03818116600090815260096020526040908190205490516338b4afd960e01b8152911660048201526024810189905290915073__$44a7a846c777c9454ac00bd07cdc6ca7e7$__906338b4afd99060440160006040518083038186803b1580156123dd57600080fd5b505af41580156123f1573d6000803e3d6000fd5b5050506000888152600f602090815260408083208380528252808320805460ff19908116909155308452928190208054909316600190811790935560028a0154928a015460058b015460068c015460088d015484516001600160a01b038e8116825293841696810196909652858501919091526060850152608084018a9052915193945016918a917f629cadcd430142dd9c11f4216494dcd6c02127ada59395b2ba41e867f654fae4919081900360a00190a4505060016000555050505050565b6006546001600160a01b031633146124fa5760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b0381161515806125115750600354155b61255d5760405162461bcd60e51b815260206004820152601560248201527f696e76616c69642066656520636f6c6c6563746f720000000000000000000000604482015260640161080e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031633146125c75760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316141561260657600080fd5b6001600160a01b0381166000908152600860209081526040808320805460ff19169055600e909152812061263991614f09565b6001600160a01b038116600090815260016020526040812081905560105490805b828110156127595781156126fc576010818154811061268957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031660106126ab600184615805565b815481106126c957634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550612747565b836001600160a01b03166010828154811061272757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561274757600191505b806127518161585f565b91505061265a565b50801561138157601080548061277f57634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b3360009081526007602052604090205460ff166128055760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f742077686974656c697374656400000000000000604482015260640161080e565b6001600160a01b0382166000908152600c602090815260408083208484529091529020548015610c22576001600160a01b038481166000908152600a6020526040902054166128a75760405161285a90614f2a565b604051809103906000f080158015612876573d6000803e3d6000fd5b506001600160a01b038581166000908152600a6020526040902080546001600160a01b031916929091169190911790555b6001600160a01b038481166000908152600a60205260409081902054905163e33b870760e01b81526004810184905291169063e33b870790602401600060405180830381600087803b1580156128fc57600080fd5b505af115801561137b573d6000803e3d6000fd5b6011546060906000908190612930906001600160a01b03168786886140e2565b915091508067ffffffffffffffff81111561295b57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561299457816020015b612981614dea565b8152602001906001900390816129795790505b5092508160005b82811015612a94576040808301516000908152600d602052206129bd90614373565b8582815181106129dd57634e487b7160e01b600052603260045260246000fd5b60209081029190910181019190915260115460408051630e891c2760e01b815285516004820152928501516024840152840151604483015287151560648301526001600160a01b031690630e891c279060840160606040518083038186803b158015612a4857600080fd5b505afa158015612a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a80919061531b565b915080612a8c8161585f565b91505061299b565b505050509392505050565b6001600160a01b038085166000908152600a60205260409020546060911680156107c157600080612ad2838887896140e2565b915091508067ffffffffffffffff811115612afd57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612b3657816020015b612b23614dea565b815260200190600190039081612b1b5790505b5093508160005b828110156107bc576040808301516000908152600d60205220612b5f90614373565b868281518110612b7f57634e487b7160e01b600052603260045260246000fd5b60209081029190910181019190915260408051630e891c2760e01b815284516004820152918401516024830152830151604482015287151560648201526001600160a01b03861690630e891c279060840160606040518083038186803b158015612be857600080fd5b505afa158015612bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c20919061531b565b915080612c2c8161585f565b915050612b3d565b600080612c4083614a5d565b509392505050565b60026000541415612c9b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080e565b60026000908155818152600d60205260409020600381015481546001600160a01b03909116908314612d0f5760405162461bcd60e51b815260206004820152600f60248201527f696e76616c6964206974656d2069640000000000000000000000000000000000604482015260640161080e565b6001600160a01b0381163314612d675760405162461bcd60e51b815260206004820152601860248201527f63616c6c6572206973206e6f74207468652073656c6c65720000000000000000604482015260640161080e565b6001820154600283015460038401546040516323b872dd60e01b81523060048201526001600160a01b03918216602482015260448101839052921691829081906323b872dd90606401600060405180830381600087803b158015612dca57600080fd5b505af1158015612dde573d6000803e3d6000fd5b505050506003850180546001600160a01b0319908116909155600480870180546001600160a01b038816931683179055600a8701805460ff19169055604051633e23bcbb60e11b8152600b9181019190915260248101919091526044810187905273__$44a7a846c777c9454ac00bd07cdc6ca7e7$__90637c4779769060640160006040518083038186803b158015612e7657600080fd5b505af4158015612e8a573d6000803e3d6000fd5b5050601154604051634cc8221560e01b8152600481018a90526001600160a01b039091169250634cc822159150602401600060405180830381600087803b158015612ed457600080fd5b505af1158015612ee8573d6000803e3d6000fd5b505060405163589a174360e01b815260048101859052600092506001600160a01b038616915063589a17439060240160206040518083038186803b158015612f2f57600080fd5b505afa158015612f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f679190614fb2565b6001600160a01b03818116600090815260096020526040908190205490516338b4afd960e01b8152911660048201526024810189905290915073__$44a7a846c777c9454ac00bd07cdc6ca7e7$__906338b4afd99060440160006040518083038186803b158015612fd757600080fd5b505af4158015612feb573d6000803e3d6000fd5b5050505085600801546000141561305d5760405162c6239360e11b815260048101849052600060248201526001600160a01b0385169063018c472690604401600060405180830381600087803b15801561304457600080fd5b505af1158015613058573d6000803e3d6000fd5b505050505b6002860154600187015487546040516001600160a01b03909216917fce438b6cfecd51c87c70deb47c0e4af51fa8bf618405102abcfe6a8408c1385190600090a4505060016000555050505050565b6130b4614dea565b6000828152600d602052604090206130cb90614373565b92915050565b6060601080548060200260200160405190810160405280929190818152602001828054801561312957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161310b575b5050505050905090565b6000818152600d602052604080822060018101546002820154925163589a174360e01b81529193926001600160a01b039091169163589a17439161317d9160040190815260200190565b60206040518083038186803b15801561319557600080fd5b505afa1580156131a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131cd9190614fb2565b9050336001600160a01b038216146132275760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74207468652063726561746f7200000000000000604482015260640161080e565b50506000908152600f602090815260408083208380529091529020805460ff19169055565b6006546001600160a01b031633146132945760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b80806133045760405162461bcd60e51b815260206004820152601060248201527f656d707479206275796572206c69737400000000000000000000000000000000604482015260640161080e565b6000848152600d602052604080822060018101546002820154925163589a174360e01b81529193926001600160a01b039091169163589a17439161334e9160040190815260200190565b60206040518083038186803b15801561336657600080fd5b505afa15801561337a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339e9190614fb2565b90506001600160a01b03811633146133f85760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74207468652063726561746f7200000000000000604482015260640161080e565b6000868152600f602090815260408083203080855292529091205460ff16156134635760405162461bcd60e51b815260206004820152601360248201527f6e6f7420696e697469616c206c697374696e6700000000000000000000000000604482015260640161080e565b6000878152600f602090815260408083208380529091528120805460ff191660011790555b8481101561137b5760008787838181106134b257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906134c79190614f96565b60008a8152600f602052604081209192506001600160a01b03808416908616141591908a8a8681811061350a57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061351f9190614f96565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905550806135528161585f565b915050613488565b3360009081526007602052604090205460ff166135b95760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f742077686974656c697374656400000000000000604482015260640161080e565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e9060240160206040518083038186803b1580156135fc57600080fd5b505afa158015613610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136349190614fb2565b6001600160a01b0384166000908152600c60209081526040808320868452909152902054909150806137955760056000815461366f9061585f565b91829055506001600160a01b038581166000818152600c6020908152604080832089845282528083208690558051610160810182528681528083019485528082018a8152606082018581528a88166080840190815260a0840187815260c0850188815260e0860189815261010087018a815261012088018b815261014089018c81528f8d52600d909b5298909a209651875599516001870180546001600160a01b0319908116928e169290921790559451600287015592516003860180548616918c1691909117905590516004850180548516918b169190911790555160058401805490931698169790971790559451600686015592516007850155905160088401559051600983015551600a909101805460ff191691151591909117905590506137da565b6000818152600d602052604090206003810180546001600160a01b03199081169091556004820180549091166001600160a01b038516179055600a01805460ff191690555b604051633e23bcbb60e11b8152600b60048201526001600160a01b03831660248201526044810182905273__$44a7a846c777c9454ac00bd07cdc6ca7e7$__90637c4779769060640160006040518083038186803b15801561383b57600080fd5b505af415801561384f573d6000803e3d6000fd5b5050505082846001600160a01b0316827f2e979c2abee3feb11b09d0199e22cecd37f21b413de97abf9e75bc1d0853dfe760405160405180910390a450505050565b600260005414156138e45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080e565b600260009081556001600160a01b0384168152600860205260409020543390869060ff1661394c5760405162461bcd60e51b815260206004820152601560248201527434b73b30b634b2103830bcb6b2b73a103a37b5b2b760591b604482015260640161080e565b6040516331a9108f60e11b8152600481018790526001600160a01b038084169190831690636352211e9060240160206040518083038186803b15801561399157600080fd5b505afa1580156139a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139c99190614fb2565b6001600160a01b031614613a0d5760405162461bcd60e51b81526020600482015260176024820152600080516020615f8a833981519152604482015260640161080e565b6001600160a01b038516600090815260016020526040902054841015613a655760405162461bcd60e51b815260206004820152600d60248201526c707269636520746f6f206c6f7760981b604482015260640161080e565b6127108361ffff161115613abb5760405162461bcd60e51b815260206004820152601b60248201527f7374616b696e672070657263656e7461676520746f6f20686967680000000000604482015260640161080e565b6002548361ffff161015613b115760405162461bcd60e51b815260206004820152601a60248201527f7374616b696e672070657263656e7461676520746f6f206c6f77000000000000604482015260640161080e565b6000612710613b2461ffff8616876157e6565b613b2e91906157c6565b90506000613b3c8287615805565b6001600160a01b038a166000908152600c602090815260408083208c845290915290205490915080613d5b57600560008154613b779061585f565b919050819055600c60008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b815260200190815260200160002081905590506040518061016001604052808281526020018b6001600160a01b031681526020018a8152602001866001600160a01b03168152602001306001600160a01b03168152602001896001600160a01b03168152602001888152602001838152602001600081526020016000815260200160011515815250600d60008381526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0160006101000a81548160ff021916908315150217905550905050613dc6565b6000818152600d602052604090206003810180546001600160a01b038089166001600160a01b031992831617909255600483018054821630179055600583018054928c16929091169190911790556006810188905560078101839055600a01805460ff191660011790555b60405162c6239360e11b8152600481018a9052600160248201526001600160a01b038b169063018c472690604401600060405180830381600087803b158015613e0e57600080fd5b505af1158015613e22573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b038881166004830152306024830152604482018d9052871692506323b872dd9150606401600060405180830381600087803b158015613e7657600080fd5b505af1158015613e8a573d6000803e3d6000fd5b505050506001600160a01b038581166000908152600b6020526040908190205490516338b4afd960e01b8152911660048201526024810182905273__$44a7a846c777c9454ac00bd07cdc6ca7e7$__906338b4afd99060440160006040518083038186803b158015613efb57600080fd5b505af4158015613f0f573d6000803e3d6000fd5b505060115460405163e33b870760e01b8152600481018590526001600160a01b03909116925063e33b87079150602401600060405180830381600087803b158015613f5957600080fd5b505af1158015613f6d573d6000803e3d6000fd5b505060405163589a174360e01b8152600481018c9052600092506001600160a01b038d16915063589a17439060240160206040518083038186803b158015613fb457600080fd5b505afa158015613fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613fec9190614fb2565b604051633e23bcbb60e11b8152600960048201526001600160a01b03821660248201526044810184905290915073__$44a7a846c777c9454ac00bd07cdc6ca7e7$__90637c4779769060640160006040518083038186803b15801561405057600080fd5b505af4158015614064573d6000803e3d6000fd5b5050604080516001600160a01b038a81168252600060208301528d811682840152606082018d90526080820188905260a0820189905291518e9450918f16925085917f1f2bc42afd1ecfa86cd3bd1c90c99e3c356a871aba9768b1d4abe60dc41d6aa79181900360c00190a450506001600055505050505050505050565b61410660405180606001604052806000815260200160008152602001600081525090565b6000841561421c57604051634a83e9cd60e11b8152600481018690526001600160a01b03871690630e891c27908290639507d39a9060240160606040518083038186803b15801561415657600080fd5b505afa15801561416a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061418e919061531b565b604080516001600160e01b031960e085901b16815282516004820152602083015160248201529101516044820152861515606482015260840160606040518083038186803b1580156141df57600080fd5b505afa1580156141f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614217919061531b565b614295565b604051631b253ed160e21b815284151560048201526001600160a01b03871690636c94fb449060240160606040518083038186803b15801561425d57600080fd5b505afa158015614271573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614295919061531b565b915081835b6000811180156142ad5750604082015115155b1561436857826142bc8161585f565b60408051630e891c2760e01b8152855160048201526020860151602482015290850151604482015288151560648201529094506001600160a01b038a169150630e891c279060840160606040518083038186803b15801561431c57600080fd5b505afa158015614330573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614354919061531b565b91508061436081615848565b91505061429a565b505094509492505050565b61437b614dea565b8154815260018201546001600160a01b039081166020830152600283015460408301526005830154166101a082015260068201546101c0820152600a82015460ff161580156101208301526145685760038201546001600160a01b039081166101408301819052604051637ae2b9c160e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000009091169063f5c573829060240160006040518083038186803b15801561443d57600080fd5b505afa158015614451573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526144799190810190615294565b610160820152610140810151604051633c02914560e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690637805228a9060240160006040518083038186803b1580156144e857600080fd5b505afa1580156144fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526145249190810190615294565b6101808201526101c08101516007830154614541906127106157e6565b61454b91906157c6565b6101e0820152805161455c90614a5d565b50610200820152614773565b80602001516001600160a01b0316636352211e82604001516040518263ffffffff1660e01b815260040161459e91815260200190565b60206040518083038186803b1580156145b657600080fd5b505afa1580156145ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145ee9190614fb2565b6001600160a01b0390811660c08301819052604051637ae2b9c160e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000009091169063f5c573829060240160006040518083038186803b15801561465b57600080fd5b505afa15801561466f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526146979190810190615294565b60e082015260c0810151604051633c02914560e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690637805228a9060240160006040518083038186803b15801561470457600080fd5b505afa158015614718573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526147409190810190615294565b6101008201528051600090819061475690614a5d565b909250905061476581836157ae565b610200840152610220830152505b80602001516001600160a01b031663589a174382604001516040518263ffffffff1660e01b81526004016147a991815260200190565b60206040518083038186803b1580156147c157600080fd5b505afa1580156147d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147f99190614fb2565b6001600160a01b0390811660608301819052604051637ae2b9c160e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000009091169063f5c573829060240160006040518083038186803b15801561486657600080fd5b505afa15801561487a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526148a29190810190615294565b60808201526060810151604051633c02914560e11b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690637805228a9060240160006040518083038186803b15801561490f57600080fd5b505afa158015614923573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261494b9190810190615294565b60a0820152919050565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03841690636352211e9060240160206040518083038186803b15801561499857600080fd5b505afa9250505080156149c8575060408051601f3d908101601f191682019092526149c591810190614fb2565b60015b6149d4575060016130cb565b6001600160a01b03161590506130cb565b6040516001600160a01b03831660248201526044810182905261138190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152614ae9565b6000818152600d6020526040812081908180614a7883614bbb565b909250905060006002614a8b8385615805565b614a9591906157c6565b90506000614aa38285615805565b989197509095505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610c229085906323b872dd60e01b90608401614a11565b6000614b3e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614c709092919063ffffffff16565b8051909150156113815780806020019051810190614b5c9190615278565b6113815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161080e565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637965d56d85600901546040518263ffffffff1660e01b8152600401614c1291815260200190565b60206040518083038186803b158015614c2a57600080fd5b505afa158015614c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c62919061538e565b600890940154939492505050565b6060614c7f8484600085614c89565b90505b9392505050565b606082471015614cea5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161080e565b843b614d385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161080e565b600080866001600160a01b03168587604051614d5491906155f6565b60006040518083038185875af1925050503d8060008114614d91576040519150601f19603f3d011682016040523d82523d6000602084013e614d96565b606091505b5091509150614da6828286614db1565b979650505050505050565b60608315614dc0575081614c82565b825115614dd05782518084602001fd5b8160405162461bcd60e51b815260040161080e91906156c0565b6040518061024001604052806000815260200160006001600160a01b031681526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b03168152602001606081526020016060815260200160001515815260200160006001600160a01b03168152602001606081526020016060815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b828054828255906000526020600020908101928215614ef9579160200282015b82811115614ef957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614ec4565b50614f05929150614f37565b5090565b5080546000825590600052602060002090810190614f279190614f37565b50565b6106c0806158ca83390190565b5b80821115614f055760008155600101614f38565b60008083601f840112614f5d578182fd5b50813567ffffffffffffffff811115614f74578182fd5b6020830191508360208260051b8501011115614f8f57600080fd5b9250929050565b600060208284031215614fa7578081fd5b8135614c82816158a6565b600060208284031215614fc3578081fd5b8151614c82816158a6565b600080600060608486031215614fe2578182fd5b8335614fed816158a6565b92506020840135614ffd816158a6565b929592945050506040919091013590565b60008060408385031215615020578182fd5b823561502b816158a6565b946020939093013593505050565b600080600080600060a08688031215615050578081fd5b853561505b816158a6565b9450602086013593506040860135615072816158a6565b925060608601359150608086013561ffff8116811461508f578182fd5b809150509295509295909350565b6000806000606084860312156150b1578283fd5b83356150bc816158a6565b92506020848101359250604085013567ffffffffffffffff8111156150df578283fd5b8501601f810187136150ef578283fd5b80356151026150fd8261578a565b615759565b8082825284820191508484018a868560051b8701011115615121578687fd5b8694505b8385101561514c578035615138816158a6565b835260019490940193918501918501615125565b5080955050505050509250925092565b60008060008060808587031215615171578384fd5b843561517c816158a6565b93506020850135925060408501359150606085013561519a816158bb565b939692955090935050565b600080602083850312156151b7578182fd5b823567ffffffffffffffff8111156151cd578283fd5b6151d985828601614f4c565b90969095509350505050565b600060208083850312156151f7578182fd5b825167ffffffffffffffff81111561520d578283fd5b8301601f8101851361521d578283fd5b805161522b6150fd8261578a565b80828252848201915084840188868560051b870101111561524a578687fd5b8694505b8385101561526c57805183526001949094019391850191850161524e565b50979650505050505050565b600060208284031215615289578081fd5b8151614c82816158bb565b6000602082840312156152a5578081fd5b815167ffffffffffffffff808211156152bc578283fd5b818401915084601f8301126152cf578283fd5b8151818111156152e1576152e1615890565b6152f4601f8201601f1916602001615759565b915080825285602082850101111561530a578384fd5b6107c181602084016020860161581c565b60006060828403121561532c578081fd5b6040516060810181811067ffffffffffffffff8211171561534f5761534f615890565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600060208284031215615387578081fd5b5035919050565b60006020828403121561539f578081fd5b5051919050565b6000806000604084860312156153ba578081fd5b83359250602084013567ffffffffffffffff8111156153d7578182fd5b6153e386828701614f4c565b9497909650939450505050565b60008060408385031215615402578182fd5b50508035926020909101359150565b600080600060608486031215615425578081fd5b8335925060208401359150604084013561543e816158bb565b809150509250925092565b6000815180845261546181602086016020860161581c565b601f01601f19169290920160200192915050565b600061024082518452602083015161549860208601826001600160a01b03169052565b506040830151604085015260608301516154bd60608601826001600160a01b03169052565b5060808301518160808601526154d582860182615449565b91505060a083015184820360a08601526154ef8282615449565b91505060c083015161550c60c08601826001600160a01b03169052565b5060e083015184820360e08601526155248282615449565b915050610100808401518583038287015261553f8382615449565b92505050610120808401516155578287018215159052565b5050610140838101516001600160a01b03169085015261016080840151858303828701526155858382615449565b9250505061018080840151858303828701526155a18382615449565b925050506101a0808401516155c0828701826001600160a01b03169052565b50506101c083810151908501526101e0808401519085015261020080840151908501526102209283015192909301919091525090565b6000825161560881846020870161581c565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156156535783516001600160a01b03168352928401929184019160010161562e565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b828110156156b357603f198886030184526156a1858351615475565b94509285019290850190600101615685565b5092979650505050505050565b602081526000614c826020830184615449565b602081526000614c826020830184615475565b600060a082018783526020878185015260a0604085015281875480845260c0860191508885528285209350845b818110156157385784546001600160a01b031683526001948501949284019201615713565b50506001600160a01b03969096166060850152505050608001529392505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561578257615782615890565b604052919050565b600067ffffffffffffffff8211156157a4576157a4615890565b5060051b60200190565b600082198211156157c1576157c161587a565b500190565b6000826157e157634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156158005761580061587a565b500290565b6000828210156158175761581761587a565b500390565b60005b8381101561583757818101518382015260200161581f565b83811115610c225750506000910152565b6000816158575761585761587a565b506000190190565b60006000198214156158735761587361587a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114614f2757600080fd5b8015158114614f2757600080fdfe60a060405234801561001057600080fd5b5033606081901b608052610687610039600039600081816101e0015261042301526106876000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f7dcfa31161005b5780638f7dcfa3146100f7578063949d225d146100ff5780639507d39a14610116578063e33b87071461012957600080fd5b80630e891c271461008d57806313d8c840146100c75780634cc82215146100cf5780636c94fb44146100e4575b600080fd5b6100a061009b36600461056f565b61013c565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b6100a0610180565b6100e26100dd3660046105f1565b6101de565b005b6100a06100f2366004610555565b610323565b6100a0610367565b61010860005481565b6040519081526020016100be565b6100a06101243660046105f1565b6103c4565b6100e26101373660046105f1565b610421565b61016060405180606001604052806000815260200160008152602001600081525090565b6101798261016f5783516103c4565b83602001516103c4565b9392505050565b6101a460405180606001604052806000815260200160008152602001600081525090565b5060028054600090815260036020908152604091829020825160608101845281548152600182015492810192909252909201549082015290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146102685760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b60008181526003602052604081208054600190910154825491929091819061028f90610609565b91829055506102a75760006002819055600155610303565b8260015414156102c857600083815260036020526040902060019081015490555b8260025414156102e5576000838152600360205260409020546002555b60008281526003602052604080822060010183905582825290208290555b505060009081526003602052604081208181556001810182905560020155565b61034760405180606001604052806000815260200160008152602001600081525090565b8161035957610354610180565b610361565b610361610367565b92915050565b61038b60405180606001604052806000815260200160008152602001600081525090565b50600180546000908152600360209081526040918290208251606081018452815481529381015491840191909152600201549082015290565b6103e860405180606001604052806000815260200160008152602001600081525090565b50600090815260036020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633146104a65760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161025f565b6104ca60405180606001604052806000815260200160008152602001600081525090565b604081018290526000805490806104e083610620565b909155506104f75760028290556001829055610516565b6002805480835260009081526003602052604090206001018390558290555b60009182526003602090815260409283902082518155908201516001820155910151600290910155565b8035801515811461055057600080fd5b919050565b600060208284031215610566578081fd5b61017982610540565b6000808284036080811215610582578182fd5b606081121561058f578182fd5b506040516060810181811067ffffffffffffffff821117156105bf57634e487b7160e01b83526041600452602483fd5b60409081528435825260208086013590830152848101359082015291506105e860608401610540565b90509250929050565b600060208284031215610602578081fd5b5035919050565b6000816106185761061861063b565b506000190190565b60006000198214156106345761063461063b565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203da6ac77d46979253aeb19f11d6a36c43038f48d09f97ce175555024bbd37e8164736f6c6343000804003363616c6c6572206973206e6f7420746865206f776e6572000000000000000000a264697066735822122021636fb5769276720f4964446f8b160f3aaa4f3f00a44943aeffce25a588086964736f6c63430008040033",
  "libraries": {
    "SafeNidhiCollection": "0xDecC66Ac03a22166917F301Bb2EF21FA3F3c2832"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addPaymentToken(address,uint256,address[])": {
        "details": "Adds a new token as payment option."
      },
      "addToBuyerWhitelist(uint256,address[])": {
        "details": "Whitelists a list of buyer addresses for the provided item. This will only affect the initial sale."
      },
      "addTokenToCreatorCollection(address,address,uint256)": {
        "details": "Adds the token to the creator's collection. This function can only be called from whitelisted NFT contracts."
      },
      "afterBurnToken(address,address,uint256)": {
        "details": "Called by any Nidhi NFT after it was burned. This will initiate the transfer of all SGURU tokens held by this token and delete all index entries associated with this token. Since this function's visibility is external, it will verify that the token was in fact burned."
      },
      "collectionSizesByOwner(address)": {
        "details": "Returns the collection sizes for the given address."
      },
      "delistMarketItem(uint256)": {
        "details": "Delists an item from the marketplace. The item itself will be transferred back to the seller."
      },
      "fetchItems(uint256[])": {
        "details": "Returns a list of items."
      },
      "fetchItemsByCreator(address,uint256,uint256,bool)": {
        "details": "Returns a page of items by creator."
      },
      "fetchItemsByOwner(address,uint256,uint256,bool)": {
        "details": "Returns a page of listed market items."
      },
      "fetchMarketItems(uint256,uint256,bool)": {
        "details": "Returns a page of listed market items."
      },
      "getMarketItem(uint256)": {
        "details": "Returns the market item for the provided id."
      },
      "getMarketItemId(address,uint256)": {
        "details": "Returns the market item id for the provided NFT. If the token is not on the marketplace, this function will return 0."
      },
      "getPaymentTokens()": {
        "details": "Returns all valid payment tokens."
      },
      "getSwapRoute(address)": {
        "details": "Returns the swap route for the given token."
      },
      "importMarketItem(address,uint256)": {
        "details": "Adds an arbitrary NFT to the user's collection."
      },
      "intrinsicValue(uint256)": {
        "details": "Returns the intrinsic value of the given market item."
      },
      "listMarketItem(address,uint256,address,uint256,uint16)": {
        "details": "Lists an item for sale on the marketplace. The item itself will be transferred to the marketplace."
      },
      "purchaseMarketItem(uint256)": {
        "details": "Sells the market item. Funds will be transferred to the seller and the staking contract. The ownership of the item will be transferred to the buyer."
      },
      "redeem(uint256,uint256)": {
        "details": "Transfers the redeemable value to the current owner."
      },
      "redeemable(uint256)": {
        "details": "Returns the redeemable value of the given market item."
      },
      "removePaymentToken(address)": {
        "details": "Removes a token from payment options."
      },
      "removeTokenFromOwnerCollection(address,uint256)": {
        "details": "Removes the provided token from the owner's collection. This function can be called by the owner or the contract of the NFT that should be removed. The latter should only remove the token, if there was an external token ownership transfer."
      },
      "resetBuyerWhitelist(uint256)": {
        "details": "Resets the whitelist for the provided item. This will allow anyone to purchase this item."
      },
      "setFee(uint256)": {
        "details": "Sets the TX fee that is applied to each purchase."
      },
      "setFeeCollector(address)": {
        "details": "Sets the address where TX fees are being sent to."
      },
      "setMinPrice(address,uint256)": {
        "details": "Sets the minimum price for new market items. The minimum price must be greater than 0."
      },
      "setMinStakingPercentage(uint256)": {
        "details": "Sets the minimum staking percentage for new market items. The minimum staking percentage must be greater than 0 and less then or equal to 100. The provided value is the actual percentage multiplied by 100."
      },
      "totalValueByOwner(address)": {
        "details": "Returns the total value for all items of the given owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers the contract ownership."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 634,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 4490,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "minPrice",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4493,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "minStakingPercentage",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4495,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "fee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4497,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "feeCollector",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 4499,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_itemIds",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 4501,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 4505,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_isWhitelistedNFT",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4509,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_isPaymentToken",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4514,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_listedItemsByCreator",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_contract(NidhiCollection)8605)"
      },
      {
        "astId": 4519,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_itemsByCreator",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_contract(NidhiCollection)8605)"
      },
      {
        "astId": 4524,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_itemsByOwner",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_contract(NidhiCollection)8605)"
      },
      {
        "astId": 4530,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_tokenIdToItemId",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 4535,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_idToMarketItem",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_struct(MarketItem)4434_storage)"
      },
      {
        "astId": 4540,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_routerPaths",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 4546,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_buyerWhitelist",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 4549,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_paymentTokens",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4552,
        "contract": "contracts/NidhiMarket.sol:NidhiMarket",
        "label": "_listedItems",
        "offset": 0,
        "slot": "17",
        "type": "t_contract(NidhiCollection)8605"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(NidhiCollection)8605": {
        "encoding": "inplace",
        "label": "contract NidhiCollection",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_contract(NidhiCollection)8605)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract NidhiCollection)",
        "numberOfBytes": "32",
        "value": "t_contract(NidhiCollection)8605"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(MarketItem)4434_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NidhiMarket.MarketItem)",
        "numberOfBytes": "32",
        "value": "t_struct(MarketItem)4434_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(MarketItem)4434_storage": {
        "encoding": "inplace",
        "label": "struct NidhiMarket.MarketItem",
        "members": [
          {
            "astId": 4413,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "itemId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4415,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "nftContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 4417,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4419,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "seller",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 4421,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "owner",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 4423,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "paymentToken",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 4425,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "price",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4427,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "payoutAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4429,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "stakedAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4431,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "gons",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4433,
            "contract": "contracts/NidhiMarket.sol:NidhiMarket",
            "label": "listed",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}